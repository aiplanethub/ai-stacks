{
    "id": "1614c797-a7f1-4546-a80c-eadb74fd387e",
    "data": {
        "nodes": [
            {
                "width": 384,
                "height": 502,
                "id": "RecursiveCharacterTextSplitter-xwDw4",
                "type": "genericNode",
                "position": {
                    "x": 822.1239666974004,
                    "y": 287.735834111972
                },
                "data": {
                    "type": "RecursiveCharacterTextSplitter",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow import CustomComponent\nfrom langchain.schema import Document\nfrom genflow.utils.util import build_loader_repr_from_documents\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        self.repr_value = build_loader_repr_from_documents(docs)\n        return docs\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chunk_overlap": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 200,
                                "password": false,
                                "name": "chunk_overlap",
                                "display_name": "Chunk Overlap",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The amount of overlap between chunks.",
                                "type": "int",
                                "list": false
                            },
                            "chunk_size": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 1000,
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Chunk Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The maximum length of each chunk.",
                                "type": "int",
                                "list": false
                            },
                            "documents": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The documents to split.",
                                "type": "Document",
                                "list": true
                            },
                            "separators": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "separators",
                                "display_name": "Separators",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].",
                                "type": "str",
                                "list": true
                            }
                        },
                        "description": "Split text into chunks of a specified length.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "Recursive Character Text Splitter",
                        "custom_fields": {
                            "chunk_overlap": null,
                            "chunk_size": null,
                            "documents": null,
                            "separators": null
                        },
                        "output_types": [
                            "RecursiveCharacterTextSplitter"
                        ],
                        "documentation": "https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter",
                        "beta": true,
                        "error": null
                    },
                    "id": "RecursiveCharacterTextSplitter-xwDw4"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 822.1239666974004,
                    "y": 287.735834111972
                },
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 502
                }
            },
            {
                "width": 384,
                "height": 736,
                "id": "AzureChatOpenAI-v6aIT",
                "type": "genericNode",
                "position": {
                    "x": 1369.5930557583447,
                    "y": -48.4794678555628
                },
                "data": {
                    "type": "AzureChatOpenAI",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow.interface.custom import CustomComponent\nfrom langchain.llms.base import BaseLLM\nfrom langchain.chat_models import AzureChatOpenAI\n\n\nclass AzureChatOpenAILLM(CustomComponent):\n    display_name: str = \"AzureChatOpenAI\"\n    description: str = \"Azure Chat Open AI Chat&Completion large language models.\"\n\n    AZURE_OPENAI_MODELS = [\n        \"gpt-4\",\n        \"gpt-4-32k\",\n        \"gpt-4-vision\",\n    ]\n\n    def build_config(self):\n        return {\n            \"model\": {\n                \"display_name\": \"Model Name\",\n                \"value\": \"gpt-4\",\n                \"options\": self.AZURE_OPENAI_MODELS,\n                \"required\": True,\n            },\n            \"api_key\": {\n                \"display_name\": \"AzureChatOpenAI API Key\",\n                \"required\": True,\n                \"password\": True,\n            },\n            \"api_base\": {\n                \"display_name\": \"AzureChatOpenAI API Base\",\n                \"required\": True,\n            },\n            \"api_type\": {\"display_name\": \"AzureChatOpenAI API Type\", \"required\": True},\n            \"azure_deployment\": {\n                \"display_name\": \"Deployment Name\",\n                \"required\": True,\n            },\n            \"api_version\": {\n                \"display_name\": \"API Version\",\n                \"value\": \"2023-07-01-preview\",\n                \"required\": True,\n                \"advanced\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"value\": 0.5,\n                \"field_type\": \"float\",\n                \"required\": False,\n            },\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"value\": 512,\n                \"required\": False,\n                \"field_type\": \"int\",\n                \"advanced\": True,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        model: str,\n        api_base: str,\n        api_type: str,\n        api_key: str,\n        azure_deployment: str,\n        api_version: str = \"2023-05-15\",\n        temperature: Optional[float] = 0.7,\n        max_tokens: Optional[int] = 512,\n    ) -> BaseLLM:\n        try:\n            output = AzureChatOpenAI(\n                model_name=model,\n                openai_api_base=api_base,\n                openai_api_type=api_type,\n                openai_api_key=api_key,\n                openai_api_version=api_version,\n                deployment_name=azure_deployment,\n                temperature=temperature,\n                max_tokens=max_tokens,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Azure ChatOpenAI model.\") from e\n        return output\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "api_base": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "api_base",
                                "display_name": "AzureChatOpenAI API Base",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": "https://newaiplatform.openai.azure.com/"
                            },
                            "api_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "api_key",
                                "display_name": "AzureChatOpenAI API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": ""
                            },
                            "api_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "api_type",
                                "display_name": "AzureChatOpenAI API Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": "azure"
                            },
                            "api_version": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "2023-07-01-preview",
                                "password": false,
                                "name": "api_version",
                                "display_name": "API Version",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "azure_deployment": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "azure_deployment",
                                "display_name": "Deployment Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": "aiplatform"
                            },
                            "max_tokens": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 512,
                                "password": false,
                                "name": "max_tokens",
                                "display_name": "Max Tokens",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "model": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "gpt-4",
                                "password": false,
                                "options": [
                                    "gpt-4",
                                    "gpt-4-32k",
                                    "gpt-4-vision"
                                ],
                                "name": "model",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "temperature": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "0.1",
                                "password": false,
                                "name": "temperature",
                                "display_name": "Temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "float",
                                "list": false
                            }
                        },
                        "description": "Azure Chat Open AI Chat&Completion large language models.",
                        "base_classes": [
                            "BaseLLM",
                            "BaseLanguageModel"
                        ],
                        "display_name": "AzureChatOpenAI",
                        "custom_fields": {
                            "api_base": null,
                            "api_key": null,
                            "api_type": null,
                            "api_version": null,
                            "azure_deployment": null,
                            "max_tokens": null,
                            "model": null,
                            "temperature": null
                        },
                        "output_types": [
                            "AzureChatOpenAI"
                        ],
                        "documentation": "",
                        "beta": true,
                        "error": null
                    },
                    "id": "AzureChatOpenAI-v6aIT"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1363.9633044608906,
                    "y": -40.03484090938166
                },
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 736
                }
            },
            {
                "width": 384,
                "height": 396,
                "id": "WebBaseLoader-xRqd0",
                "type": "genericNode",
                "position": {
                    "x": 189.7471864452923,
                    "y": -90.91567267929071
                },
                "data": {
                    "type": "WebBaseLoader",
                    "node": {
                        "template": {
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": [
                                    {
                                        "source": "packaging"
                                    }
                                ],
                                "password": false,
                                "name": "metadata",
                                "display_name": "Metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "web_path": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "https://www.amazon.in/gp/help/customer/display.html?nodeId=GMD974XRCEEJJDQJ",
                                "password": false,
                                "name": "web_path",
                                "display_name": "Web Page",
                                "advanced": false,
                                "input_types": [
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "WebBaseLoader"
                        },
                        "description": "Load HTML pages using `urllib` and parse them with `BeautifulSoup'.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "WebBaseLoader",
                        "custom_fields": {},
                        "output_types": [
                            "Document"
                        ],
                        "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/integrations/web_base",
                        "beta": false,
                        "error": null
                    },
                    "id": "WebBaseLoader-xRqd0"
                },
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": 189.7471864452923,
                    "y": -90.91567267929071
                },
                "measured": {
                    "width": 384,
                    "height": 396
                }
            },
            {
                "width": 384,
                "height": 396,
                "id": "WebBaseLoader-zhPbg",
                "type": "genericNode",
                "position": {
                    "x": 193.09983138137545,
                    "y": 336.5465566713143
                },
                "data": {
                    "type": "WebBaseLoader",
                    "node": {
                        "template": {
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": [
                                    {
                                        "source": "free-shipping"
                                    }
                                ],
                                "password": false,
                                "name": "metadata",
                                "display_name": "Metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "web_path": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "https://www.amazon.in/gp/help/customer/display.html?ref_=hp_left_v4_sib&nodeId=GETBNKYH8CDWD8YU",
                                "password": false,
                                "name": "web_path",
                                "display_name": "Web Page",
                                "advanced": false,
                                "input_types": [
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "WebBaseLoader"
                        },
                        "description": "Load HTML pages using `urllib` and parse them with `BeautifulSoup'.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "WebBaseLoader",
                        "custom_fields": {},
                        "output_types": [
                            "Document"
                        ],
                        "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/integrations/web_base",
                        "beta": false,
                        "error": null
                    },
                    "id": "WebBaseLoader-zhPbg"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 193.09983138137545,
                    "y": 336.5465566713143
                },
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 396
                }
            },
            {
                "width": 384,
                "height": 396,
                "id": "WebBaseLoader-60gax",
                "type": "genericNode",
                "position": {
                    "x": 185.85677222185296,
                    "y": 781.6878676255312
                },
                "data": {
                    "type": "WebBaseLoader",
                    "node": {
                        "template": {
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": [
                                    {
                                        "source": "faqs"
                                    }
                                ],
                                "password": false,
                                "name": "metadata",
                                "display_name": "Metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "web_path": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "https://www.amazon.in/gp/help/customer/display.html?nodeId=G202115040#GUID-2AF6C743-32BB-453A-9322-99B23126B99D__SECTION_D3328A1BAC5B473EA9A51FEBE8202BF9",
                                "password": false,
                                "name": "web_path",
                                "display_name": "Web Page",
                                "advanced": false,
                                "input_types": [
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "WebBaseLoader"
                        },
                        "description": "Load HTML pages using `urllib` and parse them with `BeautifulSoup'.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "WebBaseLoader",
                        "custom_fields": {},
                        "output_types": [
                            "Document"
                        ],
                        "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/integrations/web_base",
                        "beta": false,
                        "error": null
                    },
                    "id": "WebBaseLoader-60gax"
                },
                "positionAbsolute": {
                    "x": 183.04189657312588,
                    "y": 733.8349815971709
                },
                "selected": false,
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 396
                }
            },
            {
                "width": 384,
                "height": 531,
                "id": "ConversationBufferMemory-Yr7NE",
                "type": "genericNode",
                "position": {
                    "x": 1458.1244862577437,
                    "y": 778.9568291248015
                },
                "data": {
                    "type": "ConversationBufferMemory",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional, Union\nfrom langchain.memory.chat_memory import BaseMemory, BaseChatMemory\nfrom langchain.memory.buffer import ConversationBufferMemory\nfrom langchain.memory.chat_message_histories.postgres import PostgresChatMessageHistory\n\nfrom genflow import CustomComponent\n\n\nclass ConversationBufferMemoryComponent(CustomComponent):\n    display_name: str = \"ConversationBufferMemory\"\n    description: str = \"Buffer for storing conversation memory.\"\n    documentation: str = (\n        \"https://docs.aiplanet.com/components/memories#conversationbuffermemory\"\n    )\n    beta = False\n\n    def build_config(self):\n        return {\n            \"input_key\": {\n                \"display_name\": \"Input Key\",\n                \"required\": False,\n                \"value\": \"\",\n                \"info\": \"The variable to be used as Chat Input when more than one variable is available.\",\n            },\n            \"memory_key\": {\n                \"display_name\": \"Memory Key\",\n                \"required\": False,\n                \"value\": \"history\",\n            },\n            \"output_key\": {\n                \"display_name\": \"Output Key\",\n                \"required\": False,\n                \"value\": \"\",\n                \"info\": \"The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)\",\n            },\n            \"return_messages\": {\n                \"display_name\": \"Return Messages\",\n                \"field_type\": \"bool\",\n                \"required\": False,\n                \"value\": True,\n            },\n            \"session_id\": {\n                \"display_name\": \"Session ID\",\n                \"required\": False,\n                \"advanced\": True,\n                \"value\": \"genflow_memory_db\",\n            },\n            \"connection_string\": {\n                \"display_name\": \"Connection String\",\n                \"required\": False,\n                \"advanced\": True,\n                \"value\": \"\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        input_key: Optional[str] = \"\",\n        memory_key: Optional[str] = \"history\",\n        output_key: Optional[str] = \"\",\n        return_messages: Optional[bool] = True,\n        session_id: Optional[str] = \"genflow_memory_db\",\n        connection_string: Optional[str] = \"\",\n    ) -> Union[BaseMemory, BaseChatMemory]:\n        chat_memory = PostgresChatMessageHistory(\n            session_id=session_id, connection_string=connection_string\n        )\n\n        keys = {}\n\n        if input_key and input_key != \"\":\n            keys[\"input_key\"] = input_key\n\n        if output_key and output_key != \"\":\n            keys[\"output_key\"] = output_key\n\n        return ConversationBufferMemory(\n            chat_memory=chat_memory,\n            memory_key=memory_key,\n            return_messages=return_messages,\n            **keys\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "connection_string": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": false,
                                "name": "connection_string",
                                "display_name": "Connection String",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "question",
                                "password": false,
                                "name": "input_key",
                                "display_name": "Input Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The variable to be used as Chat Input when more than one variable is available.",
                                "type": "str",
                                "list": false
                            },
                            "memory_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "chat_history",
                                "password": false,
                                "name": "memory_key",
                                "display_name": "Memory Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "output_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "answer",
                                "password": false,
                                "name": "output_key",
                                "display_name": "Output Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                                "type": "str",
                                "list": false
                            },
                            "return_messages": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "password": false,
                                "name": "return_messages",
                                "display_name": "Return Messages",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "session_id": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "genflow_memory_db",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Buffer for storing conversation memory.",
                        "base_classes": [
                            "BaseMemory",
                            "BaseChatMemory",
                            "BaseMemory"
                        ],
                        "display_name": "ConversationBufferMemory",
                        "custom_fields": {
                            "connection_string": null,
                            "input_key": null,
                            "memory_key": null,
                            "output_key": null,
                            "return_messages": null,
                            "session_id": null
                        },
                        "output_types": [
                            "ConversationBufferMemory"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/memories#conversationbuffermemory",
                        "beta": false,
                        "error": null
                    },
                    "id": "ConversationBufferMemory-Yr7NE"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1458.1244862577437,
                    "y": 778.9568291248015
                },
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 531
                }
            },
            {
                "id": "VectorStoreRetriever-3nP0J",
                "type": "genericNode",
                "position": {
                    "x": 1879.615671537383,
                    "y": 1446.6611093839067
                },
                "data": {
                    "type": "VectorStoreRetriever",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from genflow import CustomComponent\nfrom genflow.field_typing import VectorStore, BaseRetriever\n\n\nclass VectorStoreRetrieverComponent(CustomComponent):\n    display_name: str = \"VectorStoreRetriever\"\n    description: str = \"VectorStore retriever\"\n    beta = False\n    version: str = \"1.0\"\n\n    def build_config(self):\n        return {\n            \"vector_store\": {\n                \"display_name\": \"VectorStore\",\n                \"field_type\": \"VectorStore\",\n            },\n            \"search_type\": {\n                \"display_name\": \"Search Type\",\n                \"value\": \"similarity\",\n                \"options\": [\"similarity\", \"mmr\"],\n            },\n            \"search_kwargs\": {\n                \"display_name\": \"Search Kwargs\",\n                \"field_type\": \"dict\",\n                \"value\": [{\"k\": 4}],\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        search_type: str,\n        search_kwargs: dict,\n        vector_store: VectorStore,\n    ) -> BaseRetriever:\n        return vector_store.as_retriever(\n            search_type=search_type, search_kwargs=search_kwargs\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "search_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "similarity",
                                "password": false,
                                "options": [
                                    "similarity",
                                    "mmr"
                                ],
                                "name": "search_type",
                                "display_name": "Search Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": true
                            },
                            "search_kwargs": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": [
                                    {
                                        "k": 4
                                    }
                                ],
                                "password": false,
                                "name": "search_kwargs",
                                "display_name": "Search Kwargs",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "dict",
                                "list": false
                            },
                            "vector_store": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "vector_store",
                                "display_name": "VectorStore",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "VectorStore",
                                "list": false
                            }
                        },
                        "description": "VectorStore retriever",
                        "base_classes": [
                            "BaseRetriever"
                        ],
                        "display_name": "VectorStoreRetriever",
                        "custom_fields": {
                            "search_type": null,
                            "search_kwargs": null,
                            "vector_store": null
                        },
                        "output_types": [
                            "VectorStoreRetriever"
                        ],
                        "documentation": "",
                        "beta": false,
                        "error": null,
                        "version": "1.0"
                    },
                    "id": "VectorStoreRetriever-3nP0J"
                },
                "measured": {
                    "width": 384,
                    "height": 419
                },
                "selected": false,
                "dragging": false
            },
            {
                "id": "Weaviate-x8B2x",
                "type": "genericNode",
                "position": {
                    "x": 1382.741558111818,
                    "y": 1384.7298878180222
                },
                "data": {
                    "type": "Weaviate",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow import CustomComponent\n\nfrom langchain.vectorstores.weaviate import Weaviate\nfrom langchain.schema import Document\nfrom langchain.vectorstores.base import VectorStore\nfrom langchain.embeddings.base import Embeddings\nimport weaviate\n\n\nclass WeaviateComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Weaviate.\n    \"\"\"\n\n    display_name: str = \"Weaviate\"\n    description: str = \"Implementation of Vector Store using Weaviate\"\n    documentation = \"https://docs.aiplanet.com/components/vector-store#weaviate\"\n    beta: bool = True\n    version: str = \"1.1\"\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"url\": {\n                \"display_name\": \"Weaviate URL\",\n                \"advanced\": True,\n                \"required\": True,\n            },\n            \"api_key\": {\n                \"display_name\": \"API Key\",\n                \"required\": True,\n                \"advanced\": True,\n                \"password\": True,\n            },\n            \"index_name\": {\n                \"display_name\": \"Index Name\",\n                \"value\": \"genflow\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"text_key\": {\n                \"display_name\": \"Text Key\",\n                \"value\": \"text\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"search_by_text\": {\n                \"display_name\": \"Search By Text\",\n                \"value\": False,\n                \"required\": False,\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        url: str,\n        index_name: Optional[str] = \"genflow\",\n        api_key: Optional[str] = None,\n        text_key: str = \"text\",\n        embedding: Optional[Embeddings] = None,\n        documents: Optional[Document] = None,\n        search_by_text: bool = False,\n    ) -> VectorStore:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - url (str): The URL of the Weaviate instance.\n        - index_name (str): The name of the index.\n        - api_key (Optional[str]): The API key for Weaviate.\n        - text_key (str): The key to use for text in Weaviate.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - search_by_text (bool): Whether to search by text or by vector.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        if api_key:\n            auth_config = weaviate.AuthApiKey(api_key=api_key)\n            client = weaviate.Client(url=url, auth_client_secret=auth_config)\n        else:\n            client = weaviate.Client(url=url)\n\n        if documents is not None and embedding is not None:\n            for doc in documents:\n                doc.metadata = {k: v for k, v in doc.metadata.items() if bool(k)}\n\n            return Weaviate.from_documents(\n                documents=documents,\n                embedding=embedding,\n                client=client,\n                index_name=index_name,\n                text_key=text_key,\n            )\n\n        if embedding is not None:\n            return Weaviate(\n                client=client,\n                index_name=index_name,\n                text_key=text_key,\n                embedding=embedding,\n                by_text=search_by_text,\n            )\n\n        return Weaviate(\n            client=client,\n            index_name=index_name,\n            text_key=text_key,\n            by_text=search_by_text,\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "url": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "url",
                                "display_name": "Weaviate URL",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "index_name": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "genflow",
                                "password": false,
                                "name": "index_name",
                                "display_name": "Index Name",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "api_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "api_key",
                                "display_name": "API Key",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false,
                                "value": ""
                            },
                            "text_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "text",
                                "password": false,
                                "name": "text_key",
                                "display_name": "Text Key",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "embedding": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "embedding",
                                "display_name": "Embedding",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "Embeddings",
                                "list": false
                            },
                            "documents": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "Document",
                                "list": true
                            },
                            "search_by_text": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "search_by_text",
                                "display_name": "Search By Text",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "bool",
                                "list": false
                            }
                        },
                        "description": "Implementation of Vector Store using Weaviate",
                        "base_classes": [
                            "VectorStore"
                        ],
                        "display_name": "Weaviate",
                        "custom_fields": {
                            "url": null,
                            "index_name": null,
                            "api_key": null,
                            "text_key": null,
                            "embedding": null,
                            "documents": null,
                            "search_by_text": null
                        },
                        "output_types": [
                            "Weaviate"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/vector-store#weaviate",
                        "beta": true,
                        "error": null,
                        "version": "1.1"
                    },
                    "id": "Weaviate-x8B2x"
                },
                "measured": {
                    "width": 384,
                    "height": 291
                },
                "selected": false,
                "dragging": false
            },
            {
                "id": "ConversationalRetrievalChain-IT612",
                "type": "genericNode",
                "position": {
                    "x": 2490,
                    "y": 585
                },
                "data": {
                    "type": "ConversationalRetrievalChain",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional, Union, Callable\nfrom genflow import CustomComponent\nfrom genflow.field_typing import (\n    BasePromptTemplate,\n    BaseLanguageModel,\n    BaseMemory,\n    Chain,\n    BaseRetriever,\n)\nfrom langchain.chains import ConversationalRetrievalChain\nfrom langchain.prompts import PromptTemplate\n\n\nclass ConversationalRetrievalChainComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a RetrievalQA using Prompt.\n    \"\"\"\n\n    display_name: str = \"ConversationalRetrievalChain\"\n    description: str = \"Implementation of ConversationalRetrievalChain: allows Memory, Custom Prompt, Retriever\"\n    documentation: str = (\n        \"https://docs.aiplanet.com/components/chains#conversationalretrievalchain\"\n    )\n    beta: bool = True\n    version: str = \"1.0\"\n\n    CHAIN_TYPE_OPTIONS = [\"stuff\", \"map_reduce\", \"refine\", \"map_rerank\"]\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"chain_type\": {\n                \"display\": \"chain_type\",\n                \"value\": \"stuff\",\n                \"options\": self.CHAIN_TYPE_OPTIONS,\n                \"required\": True,\n            },\n            \"llm\": {\"display_name\": \"LLM\", \"required\": True},\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"retriever\": {\"display_name\": \"Retriever\", \"required\": True},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        llm: BaseLanguageModel,\n        retriever: BaseRetriever,\n        prompt: Optional[BasePromptTemplate] = None,\n        chain_type: str = \"stuff\",\n        memory: BaseMemory = None,\n    ) -> Chain:\n        \"\"\"\n        Builds the RetrievalQA with prompt\n\n        Args:\n        - llm: Large Language Models\n        - chain_type: used to load a specific type of chain for question-answering\n        - chain_type_kwargs: chain keywords argument to pass prompt\n        - retriever: vector store to retrieve k relevant context information\n        - memory: memory to provide chat_history for object\n\n        Returns:\n        - Chain: The ConversationalRetrievalChain.from_llm\n        \"\"\"\n\n        DEFAULT_TEMPLATE = \"\"\"\n            Answer the question based on the chat history(delimited by <hs></hs>) and context(delimited by <ctx> </ctx>) below.\n            -----------\n            <ctx>\n            {context}\n            </ctx>\n            -----------\n            <hs>\n            {chat_history}\n            </hs>\n            -----------\n            Question: {question}\n            Answer:\n        \"\"\"\n\n        DEFAULT_PROMPT = PromptTemplate(\n            input_variables=[\"context\", \"question\", \"chat_history\"],\n            template=DEFAULT_TEMPLATE,\n        )\n\n        if prompt == None:\n            prompt = DEFAULT_PROMPT\n\n        return ConversationalRetrievalChain.from_llm(\n            llm=llm,\n            retriever=retriever,\n            chain_type=chain_type,\n            return_source_documents=True,\n            verbose=False,\n            combine_docs_chain_kwargs={\"prompt\": prompt},\n            memory=memory,\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "llm": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "llm",
                                "display_name": "LLM",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "BaseLanguageModel",
                                "list": false
                            },
                            "retriever": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "retriever",
                                "display_name": "Retriever",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "BaseRetriever",
                                "list": false
                            },
                            "prompt": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "prompt",
                                "display_name": "Prompt",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "BasePromptTemplate",
                                "list": false
                            },
                            "chain_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "stuff",
                                "password": false,
                                "options": [
                                    "stuff",
                                    "map_reduce",
                                    "refine",
                                    "map_rerank"
                                ],
                                "name": "chain_type",
                                "display_name": "chain_type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": true
                            },
                            "memory": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "memory",
                                "display_name": "Memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "BaseMemory",
                                "list": false
                            }
                        },
                        "description": "Implementation of ConversationalRetrievalChain: allows Memory, Custom Prompt, Retriever",
                        "base_classes": [
                            "Chain"
                        ],
                        "display_name": "ConversationalRetrievalChain",
                        "custom_fields": {
                            "llm": null,
                            "retriever": null,
                            "prompt": null,
                            "chain_type": null,
                            "memory": null
                        },
                        "output_types": [
                            "ConversationalRetrievalChain"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/chains#conversationalretrievalchain",
                        "beta": true,
                        "error": null,
                        "version": "1.0"
                    },
                    "id": "ConversationalRetrievalChain-IT612"
                },
                "measured": {
                    "width": 384,
                    "height": 497
                }
            },
            {
                "id": "HuggingFaceEmbeddingInferenceAPI-b9Jfe",
                "type": "genericNode",
                "position": {
                    "x": 801.6313938130852,
                    "y": 1128.626466266192
                },
                "data": {
                    "type": "HuggingFaceEmbeddingInferenceAPI",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from genflow import CustomComponent\nfrom langchain.embeddings.base import Embeddings\nfrom langchain.embeddings import HuggingFaceInferenceAPIEmbeddings\n\n\nclass HuggingFaceInferenceAPIEmbeddingsComponent(CustomComponent):\n    display_name: str = \"HuggingFaceInferenceAPI Embeddings\"\n    description: str = \"\"\"Access HuggingFaceEmbedding model via inference api,download models locally.\"\"\"\n    documentation: str = \"https://docs.aiplanet.com/components/embeddings#huggingface-inference-api-embeddings\"\n    beta = False\n    version: str = \"1.0\"\n\n    def build_config(self):\n        return {\n            \"inference_api_key\": {\n                \"display_name\": \"Inference API Key\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n                \"password\": True,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(self, inference_api_key: str, model_name: str) -> Embeddings:\n        return HuggingFaceInferenceAPIEmbeddings(\n            api_key=inference_api_key, model_name=model_name\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "inference_api_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": true,
                                "name": "inference_api_key",
                                "display_name": "Inference API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "model_name": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": false,
                                "name": "model_name",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Access HuggingFaceEmbedding model via inference api,download models locally.",
                        "base_classes": [
                            "Embeddings"
                        ],
                        "display_name": "HuggingFaceInferenceAPI Embeddings",
                        "custom_fields": {
                            "inference_api_key": null,
                            "model_name": null
                        },
                        "output_types": [
                            "HuggingFaceEmbeddingInferenceAPI"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/embeddings#huggingface-inference-api-embeddings",
                        "beta": false,
                        "error": null,
                        "version": "1.0"
                    },
                    "id": "HuggingFaceEmbeddingInferenceAPI-b9Jfe"
                },
                "measured": {
                    "width": 384,
                    "height": 403
                },
                "selected": false,
                "dragging": false
            }
        ],
        "edges": [
            {
                "source": "WebBaseLoader-60gax",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œWebBaseLoaderœ,œidœ:œWebBaseLoader-60gaxœ}",
                "target": "RecursiveCharacterTextSplitter-xwDw4",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-xwDw4œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "RecursiveCharacterTextSplitter-xwDw4",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "WebBaseLoader",
                        "id": "WebBaseLoader-60gax"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-WebBaseLoader-60gax{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œWebBaseLoaderœ,œidœ:œWebBaseLoader-60gaxœ}-RecursiveCharacterTextSplitter-xwDw4{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-xwDw4œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "WebBaseLoader-xRqd0",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œWebBaseLoaderœ,œidœ:œWebBaseLoader-xRqd0œ}",
                "target": "RecursiveCharacterTextSplitter-xwDw4",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-xwDw4œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "RecursiveCharacterTextSplitter-xwDw4",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "WebBaseLoader",
                        "id": "WebBaseLoader-xRqd0"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-WebBaseLoader-xRqd0{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œWebBaseLoaderœ,œidœ:œWebBaseLoader-xRqd0œ}-RecursiveCharacterTextSplitter-xwDw4{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-xwDw4œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "WebBaseLoader-zhPbg",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œWebBaseLoaderœ,œidœ:œWebBaseLoader-zhPbgœ}",
                "target": "RecursiveCharacterTextSplitter-xwDw4",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-xwDw4œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "RecursiveCharacterTextSplitter-xwDw4",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "WebBaseLoader",
                        "id": "WebBaseLoader-zhPbg"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-WebBaseLoader-zhPbg{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œWebBaseLoaderœ,œidœ:œWebBaseLoader-zhPbgœ}-RecursiveCharacterTextSplitter-xwDw4{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-xwDw4œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "RecursiveCharacterTextSplitter-xwDw4",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-xwDw4œ}",
                "target": "Weaviate-x8B2x",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œWeaviate-x8B2xœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "Weaviate-x8B2x",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "RecursiveCharacterTextSplitter",
                        "id": "RecursiveCharacterTextSplitter-xwDw4"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__RecursiveCharacterTextSplitter-xwDw4{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-xwDw4œ}-Weaviate-x8B2x{œfieldNameœ:œdocumentsœ,œidœ:œWeaviate-x8B2xœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "Weaviate-x8B2x",
                "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ],œdataTypeœ:œWeaviateœ,œidœ:œWeaviate-x8B2xœ}",
                "target": "VectorStoreRetriever-3nP0J",
                "targetHandle": "{œfieldNameœ:œvector_storeœ,œidœ:œVectorStoreRetriever-3nP0Jœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "vector_store",
                        "id": "VectorStoreRetriever-3nP0J",
                        "inputTypes": null,
                        "type": "VectorStore"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "VectorStore"
                        ],
                        "dataType": "Weaviate",
                        "id": "Weaviate-x8B2x"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__Weaviate-x8B2x{œbaseClassesœ:[œVectorStoreœ],œdataTypeœ:œWeaviateœ,œidœ:œWeaviate-x8B2xœ}-VectorStoreRetriever-3nP0J{œfieldNameœ:œvector_storeœ,œidœ:œVectorStoreRetriever-3nP0Jœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}"
            },
            {
                "source": "AzureChatOpenAI-v6aIT",
                "sourceHandle": "{œbaseClassesœ:[œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œAzureChatOpenAIœ,œidœ:œAzureChatOpenAI-v6aITœ}",
                "target": "ConversationalRetrievalChain-IT612",
                "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œConversationalRetrievalChain-IT612œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "llm",
                        "id": "ConversationalRetrievalChain-IT612",
                        "inputTypes": null,
                        "type": "BaseLanguageModel"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseLLM",
                            "BaseLanguageModel"
                        ],
                        "dataType": "AzureChatOpenAI",
                        "id": "AzureChatOpenAI-v6aIT"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__AzureChatOpenAI-v6aIT{œbaseClassesœ:[œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œAzureChatOpenAIœ,œidœ:œAzureChatOpenAI-v6aITœ}-ConversationalRetrievalChain-IT612{œfieldNameœ:œllmœ,œidœ:œConversationalRetrievalChain-IT612œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
            },
            {
                "source": "ConversationBufferMemory-Yr7NE",
                "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œBaseMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-Yr7NEœ}",
                "target": "ConversationalRetrievalChain-IT612",
                "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œConversationalRetrievalChain-IT612œ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "memory",
                        "id": "ConversationalRetrievalChain-IT612",
                        "inputTypes": null,
                        "type": "BaseMemory"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseMemory",
                            "BaseChatMemory",
                            "BaseMemory"
                        ],
                        "dataType": "ConversationBufferMemory",
                        "id": "ConversationBufferMemory-Yr7NE"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__ConversationBufferMemory-Yr7NE{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œBaseMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-Yr7NEœ}-ConversationalRetrievalChain-IT612{œfieldNameœ:œmemoryœ,œidœ:œConversationalRetrievalChain-IT612œ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}"
            },
            {
                "source": "VectorStoreRetriever-3nP0J",
                "sourceHandle": "{œbaseClassesœ:[œBaseRetrieverœ],œdataTypeœ:œVectorStoreRetrieverœ,œidœ:œVectorStoreRetriever-3nP0Jœ}",
                "target": "ConversationalRetrievalChain-IT612",
                "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œConversationalRetrievalChain-IT612œ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "retriever",
                        "id": "ConversationalRetrievalChain-IT612",
                        "inputTypes": null,
                        "type": "BaseRetriever"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseRetriever"
                        ],
                        "dataType": "VectorStoreRetriever",
                        "id": "VectorStoreRetriever-3nP0J"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__VectorStoreRetriever-3nP0J{œbaseClassesœ:[œBaseRetrieverœ],œdataTypeœ:œVectorStoreRetrieverœ,œidœ:œVectorStoreRetriever-3nP0Jœ}-ConversationalRetrievalChain-IT612{œfieldNameœ:œretrieverœ,œidœ:œConversationalRetrievalChain-IT612œ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}"
            },
            {
                "source": "HuggingFaceEmbeddingInferenceAPI-b9Jfe",
                "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-b9Jfeœ}",
                "target": "Weaviate-x8B2x",
                "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œWeaviate-x8B2xœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "embedding",
                        "id": "Weaviate-x8B2x",
                        "inputTypes": null,
                        "type": "Embeddings"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Embeddings"
                        ],
                        "dataType": "HuggingFaceEmbeddingInferenceAPI",
                        "id": "HuggingFaceEmbeddingInferenceAPI-b9Jfe"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__HuggingFaceEmbeddingInferenceAPI-b9Jfe{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-b9Jfeœ}-Weaviate-x8B2x{œfieldNameœ:œembeddingœ,œidœ:œWeaviate-x8B2xœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
            }
        ],
        "viewport": {
            "x": 115.28976641726507,
            "y": 118.147972063866,
            "zoom": 0.4682982636435315
        }
    },
    "description": "Service bot on Amazon Return Items",
    "name": "Customer_Service_Amazon",
    "flow_type": "chat"
}