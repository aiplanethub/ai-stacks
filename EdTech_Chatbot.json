{
    "id": "989f5178-a944-41e3-ad4a-16791be930b5",
    "data": {
        "nodes": [
            {
                "width": 384,
                "height": 376,
                "id": "PyPDFLoader-ffH98",
                "type": "genericNode",
                "position": {
                    "x": -166.377061672509,
                    "y": 161.3706042868023
                },
                "data": {
                    "type": "PyPDFLoader",
                    "node": {
                        "template": {
                            "file_path": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "suffixes": [
                                    ".pdf"
                                ],
                                "password": false,
                                "name": "file_path",
                                "advanced": false,
                                "input_types": [
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "file",
                                "list": false,
                                "fileTypes": [
                                    "pdf"
                                ],
                                "file_path": "/mnt/models/files/0d68f5e5-9112-4cfd-8e1c-0aeac20185dc/a00a941154b26eb0f944a4f89699189db857fe9e5719f6a74deb6c86cbeb84bc.pdf"
                            },
                            "file_size": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 20,
                                "password": false,
                                "name": "file_size",
                                "display_name": "Fize Size",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": [
                                    {
                                        "": ""
                                    }
                                ],
                                "password": false,
                                "name": "metadata",
                                "display_name": "Metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "_type": "PyPDFLoader"
                        },
                        "description": "Load PDF using pypdf into list of documents.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "PyPDFLoader",
                        "custom_fields": {},
                        "output_types": [
                            "Document"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/document-loaders#pypdfloader",
                        "beta": false,
                        "error": null
                    },
                    "id": "PyPDFLoader-ffH98"
                },
                "positionAbsolute": {
                    "x": -166.377061672509,
                    "y": 161.3706042868023
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 388,
                "id": "HuggingFaceEmbeddingInferenceAPI-VPfYY",
                "type": "genericNode",
                "position": {
                    "x": 182.65572774166662,
                    "y": 858.0160363549697
                },
                "data": {
                    "type": "HuggingFaceEmbeddingInferenceAPI",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from genflow import CustomComponent\nfrom langchain.embeddings.base import Embeddings\nfrom langchain.embeddings import HuggingFaceInferenceAPIEmbeddings\n\n\nclass HuggingFaceInferenceAPIEmbeddingsComponent(CustomComponent):\n    display_name: str = \"HuggingFaceInferenceAPI Embeddings\"\n    description: str = \"\"\"Access HuggingFaceEmbedding model via inference api,download models locally.\"\"\"\n    documentation: str = \"https://docs.aiplanet.com/components/embeddings#huggingface-inference-api-embeddings\"\n    beta = False\n\n    def build_config(self):\n        return {\n            \"inference_api_key\": {\n                \"display_name\": \"Inference API Key\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(self, inference_api_key: str, model_name: str) -> Embeddings:\n        return HuggingFaceInferenceAPIEmbeddings(\n            api_key=inference_api_key, model_name=model_name\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "inference_api_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "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",
                                "password": false,
                                "name": "inference_api_key",
                                "display_name": "Inference API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "model_name": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "BAAI/bge-small-en-v1.5",
                                "password": false,
                                "name": "model_name",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Access HuggingFaceEmbedding model via inference api,download models locally.",
                        "base_classes": [
                            "Embeddings"
                        ],
                        "display_name": "HuggingFaceInferenceAPI Embeddings",
                        "custom_fields": {
                            "inference_api_key": null,
                            "model_name": null
                        },
                        "output_types": [
                            "HuggingFaceEmbeddingInferenceAPI"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/embeddings#huggingface-inference-api-embeddings",
                        "beta": false,
                        "error": null
                    },
                    "id": "HuggingFaceEmbeddingInferenceAPI-VPfYY"
                },
                "positionAbsolute": {
                    "x": 182.65572774166662,
                    "y": 858.0160363549697
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 470,
                "id": "PromptTemplate-uYRxo",
                "type": "genericNode",
                "position": {
                    "x": 1214.6279577394168,
                    "y": 1114.457217744842
                },
                "data": {
                    "type": "PromptTemplate",
                    "node": {
                        "template": {
                            "output_parser": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "output_parser",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "BaseOutputParser",
                                "list": false
                            },
                            "input_types": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "input_types",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "input_variables": {
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "input_variables",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "str",
                                "list": true,
                                "value": [
                                    "context",
                                    "question"
                                ]
                            },
                            "partial_variables": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "partial_variables",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "template": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "password": false,
                                "name": "template",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "prompt",
                                "list": false,
                                "value": "Imagine you are a friendly and patient tutor for young students in grades 2-5. Your job is to help them understand their school subjects better by guiding them towards finding the answers themselves. When a student asks you a question, don't give them the direct answer right away. Instead, ask them leading questions that encourage them to think critically and arrive at the answer on their own. Use simple language and examples that are relatable to their everyday experiences. If a student is struggling with a concept, offer them hints or explain the concept in a different way. Remember to be encouraging and positive, praising their efforts and progress. You can use emojis and expressive language, but avoid it for serious topics. Your goal is to make learning a fun and rewarding experience for them. If they reach the answer, or something very close to the answer congratulate the student and confirm the answer.If required use the context retrieved from the textbook CONTEXT. If it is irrelevant to the user's query, you can ignore the CONTEXT. Incorporate student's interest  as well to provide better examples to help them understand the concepts clearly. If the student gives a well though out response that shows they have answered their doubt correctly, you can congratulate them for getting it right and ask them if they have any other doubts.\n\nCONTEXT: {context}\nQuestion: {question}"
                            },
                            "template_format": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": "f-string",
                                "password": false,
                                "name": "template_format",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "validate_template": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "validate_template",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "PromptTemplate",
                            "context": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "context",
                                "display_name": "context",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "question": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "question",
                                "display_name": "question",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "A prompt template for a language model.",
                        "base_classes": [
                            "PromptTemplate",
                            "BasePromptTemplate",
                            "StringPromptTemplate"
                        ],
                        "name": "",
                        "display_name": "PromptTemplate",
                        "documentation": "https://docs.aiplanet.com/components/prompts#prompt-template",
                        "custom_fields": {
                            "": [
                                "context",
                                "question"
                            ],
                            "template": [
                                "context",
                                "question"
                            ]
                        },
                        "output_types": [],
                        "field_formatters": {},
                        "beta": false,
                        "error": null
                    },
                    "id": "PromptTemplate-uYRxo"
                },
                "positionAbsolute": {
                    "x": 1214.6279577394168,
                    "y": 1114.457217744842
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 291,
                "id": "Chroma-ToqGZ",
                "type": "genericNode",
                "position": {
                    "x": 817.7085014834025,
                    "y": 807.982249587733
                },
                "data": {
                    "type": "Chroma",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional, Union\nfrom genflow import CustomComponent\n\nfrom langchain.vectorstores.chroma import Chroma\nfrom langchain.schema import Document\nfrom langchain.vectorstores.base import VectorStore\nfrom langchain.schema import BaseRetriever\nfrom langchain.embeddings.base import Embeddings\nimport chromadb  # type: ignore\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://docs.aiplanet.com/components/vector-store#chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\n                \"display_name\": \"Collection Name\",\n                \"value\": \"genflow\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"persist\": {\n                \"display_name\": \"Persist\",\n                \"value\": True,\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"persist_directory\": {\n                \"display_name\": \"Persist Directory\",\n                \"value\": \"/mnt/models/chroma\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        chroma_server_ssl_enabled: bool,\n        collection_name: Optional[str] = \"genflow\",\n        persist: Optional[bool] = True,\n        persist_directory: Optional[str] = \"/mnt/models/chroma\",\n        embedding: Optional[Embeddings] = None,\n        documents: Optional[Document] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins\n                or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        if embedding is not None:\n            return Chroma(\n                persist_directory=persist_directory,\n                client_settings=chroma_settings,\n                embedding_function=embedding,\n                collection_name=collection_name,\n            )\n\n        return Chroma(\n            persist_directory=persist_directory, client_settings=chroma_settings\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chroma_server_cors_allow_origins": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_cors_allow_origins",
                                "display_name": "Server CORS Allow Origins",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "chroma_server_grpc_port": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_grpc_port",
                                "display_name": "Server gRPC Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "chroma_server_host": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_host",
                                "display_name": "Server Host",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "chroma_server_port": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_port",
                                "display_name": "Server Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "chroma_server_ssl_enabled": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "chroma_server_ssl_enabled",
                                "display_name": "Server SSL Enabled",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "collection_name": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "genflow",
                                "password": false,
                                "name": "collection_name",
                                "display_name": "Collection Name",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "documents": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Document",
                                "list": true
                            },
                            "embedding": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "embedding",
                                "display_name": "Embedding",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Embeddings",
                                "list": false
                            },
                            "persist": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "password": false,
                                "name": "persist",
                                "display_name": "Persist",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "persist_directory": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "/mnt/models/chroma",
                                "password": false,
                                "name": "persist_directory",
                                "display_name": "Persist Directory",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Implementation of Vector Store using Chroma",
                        "base_classes": [
                            "VectorStore",
                            "BaseRetriever"
                        ],
                        "display_name": "Chroma",
                        "custom_fields": {
                            "chroma_server_cors_allow_origins": null,
                            "chroma_server_grpc_port": null,
                            "chroma_server_host": null,
                            "chroma_server_port": null,
                            "chroma_server_ssl_enabled": null,
                            "collection_name": null,
                            "documents": null,
                            "embedding": null,
                            "persist": null,
                            "persist_directory": null
                        },
                        "output_types": [
                            "Chroma"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/vector-store#chroma",
                        "beta": true,
                        "error": null
                    },
                    "id": "Chroma-ToqGZ"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 817.7085014834025,
                    "y": 807.982249587733
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 502,
                "id": "RecursiveCharacterTextSplitter-dKM2D",
                "type": "genericNode",
                "position": {
                    "x": 397.7979219229784,
                    "y": 244.834107978536
                },
                "data": {
                    "type": "RecursiveCharacterTextSplitter",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow import CustomComponent\nfrom langchain.schema import Document\nfrom genflow.utils.util import build_loader_repr_from_documents\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.aiplanet.com/components/text-splitters#recursivecharactertextsplitter\"\n    \n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        self.repr_value = build_loader_repr_from_documents(docs)\n        return docs\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chunk_overlap": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "200",
                                "password": false,
                                "name": "chunk_overlap",
                                "display_name": "Chunk Overlap",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The amount of overlap between chunks.",
                                "type": "int",
                                "list": false
                            },
                            "chunk_size": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 1000,
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Chunk Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The maximum length of each chunk.",
                                "type": "int",
                                "list": false
                            },
                            "documents": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The documents to split.",
                                "type": "Document",
                                "list": true
                            },
                            "separators": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "separators",
                                "display_name": "Separators",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].",
                                "type": "str",
                                "list": true
                            }
                        },
                        "description": "Split text into chunks of a specified length.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "Recursive Character Text Splitter",
                        "custom_fields": {
                            "chunk_overlap": null,
                            "chunk_size": null,
                            "documents": null,
                            "separators": null
                        },
                        "output_types": [
                            "RecursiveCharacterTextSplitter"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/text-splitters#recursivecharactertextsplitter",
                        "beta": true,
                        "error": null
                    },
                    "id": "RecursiveCharacterTextSplitter-dKM2D"
                },
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": 397.7979219229784,
                    "y": 244.834107978536
                }
            },
            {
                "width": 384,
                "height": 736,
                "id": "AzureChatOpenAI-29xdg",
                "type": "genericNode",
                "position": {
                    "x": 1064.524262813518,
                    "y": -804.404522650429
                },
                "data": {
                    "type": "AzureChatOpenAI",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow.interface.custom import CustomComponent\nfrom langchain.llms.base import BaseLLM\nfrom langchain.chat_models import AzureChatOpenAI\n\n\nclass AzureChatOpenAILLM(CustomComponent):\n    display_name: str = \"AzureChatOpenAI\"\n    description: str = \"Azure Chat Open AI Chat&Completion large language models.\"\n    documentation: str = \"https://docs.aiplanet.com/components/large-language-models#azurechatopenai\"\n    \n    AZURE_OPENAI_MODELS = [\n        \"gpt-4\",\n        \"gpt-4-32k\",\n        \"gpt-4-vision\",\n    ]\n\n    def build_config(self):\n        return {\n            \"model\": {\n                \"display_name\": \"Model Name\",\n                \"value\": \"gpt-4\",\n                \"options\": self.AZURE_OPENAI_MODELS,\n                \"required\": True,\n            },\n            \"api_key\": {\n                \"display_name\": \"AzureChatOpenAI API Key\",\n                \"required\": True,\n                \"password\": True,\n            },\n            \"api_base\": {\n                \"display_name\": \"AzureChatOpenAI API Base\",\n                \"required\": True,\n            },\n            \"api_type\": {\"display_name\": \"AzureChatOpenAI API Type\", \"required\": True},\n            \"azure_deployment\": {\n                \"display_name\": \"Deployment Name\",\n                \"required\": True,\n            },\n            \"api_version\": {\n                \"display_name\": \"API Version\",\n                \"value\": \"2023-07-01-preview\",\n                \"required\": True,\n                \"advanced\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"value\": 0.5,\n                \"field_type\": \"float\",\n                \"required\": False,\n            },\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"value\": 512,\n                \"required\": False,\n                \"field_type\": \"int\",\n                \"advanced\": True,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        model: str,\n        api_base: str,\n        api_type: str,\n        api_key: str,\n        azure_deployment: str,\n        api_version: str = \"2023-05-15\",\n        temperature: Optional[float] = 0.7,\n        max_tokens: Optional[int] = 512,\n    ) -> BaseLLM:\n        try:\n            output = AzureChatOpenAI(\n                model_name=model,\n                openai_api_base=api_base,\n                openai_api_type=api_type,\n                openai_api_key=api_key,\n                openai_api_version=api_version,\n                deployment_name=azure_deployment,\n                temperature=temperature,\n                max_tokens=max_tokens,\n            )\n        except Exception as e:\n            raise ValueError(\"Could not connect to Azure ChatOpenAI model.\") from e\n        return output\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "api_base": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "api_base",
                                "display_name": "AzureChatOpenAI API Base",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": "https://gpt-res.openai.azure.com/"
                            },
                            "api_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "api_key",
                                "display_name": "AzureChatOpenAI API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": ""
                            },
                            "api_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "api_type",
                                "display_name": "AzureChatOpenAI API Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": "azure"
                            },
                            "api_version": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "2023-07-01-preview",
                                "password": false,
                                "name": "api_version",
                                "display_name": "API Version",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "azure_deployment": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "azure_deployment",
                                "display_name": "Deployment Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": "gpt4-inference"
                            },
                            "max_tokens": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 512,
                                "password": false,
                                "name": "max_tokens",
                                "display_name": "Max Tokens",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "model": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "gpt-4",
                                "password": false,
                                "options": [
                                    "gpt-4",
                                    "gpt-4-32k",
                                    "gpt-4-vision"
                                ],
                                "name": "model",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "temperature": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 0.5,
                                "password": false,
                                "name": "temperature",
                                "display_name": "Temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "float",
                                "list": false
                            }
                        },
                        "description": "Azure Chat Open AI Chat&Completion large language models.",
                        "base_classes": [
                            "BaseLLM",
                            "BaseLanguageModel"
                        ],
                        "display_name": "AzureChatOpenAI",
                        "custom_fields": {
                            "api_base": null,
                            "api_key": null,
                            "api_type": null,
                            "api_version": null,
                            "azure_deployment": null,
                            "max_tokens": null,
                            "model": null,
                            "temperature": null
                        },
                        "output_types": [
                            "AzureChatOpenAI"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/large-language-models#azurechatopenai",
                        "beta": true,
                        "error": null
                    },
                    "id": "AzureChatOpenAI-29xdg"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1064.524262813518,
                    "y": -804.404522650429
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 685,
                "id": "ConversationBufferWindowMemory-veoMn",
                "type": "genericNode",
                "position": {
                    "x": 1208.0737511868238,
                    "y": 18.450282261173754
                },
                "data": {
                    "type": "ConversationBufferWindowMemory",
                    "node": {
                        "template": {
                            "chat_memory": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chat_memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseChatMessageHistory",
                                "list": false
                            },
                            "ai_prefix": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": "AI",
                                "password": false,
                                "name": "ai_prefix",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "human_prefix": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": "Human",
                                "password": false,
                                "name": "human_prefix",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "query",
                                "password": false,
                                "name": "input_key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The variable to be used as Chat Input when more than one variable is available.",
                                "type": "str",
                                "list": false
                            },
                            "k": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "5",
                                "password": false,
                                "name": "k",
                                "display_name": "Memory Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "memory_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "chat_history",
                                "password": false,
                                "name": "memory_key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "output_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": false,
                                "name": "output_key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                                "type": "str",
                                "list": false
                            },
                            "return_messages": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "return_messages",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false,
                                "value": false
                            },
                            "_type": "ConversationBufferWindowMemory"
                        },
                        "description": "Buffer for storing conversation memory inside a limited size window.",
                        "base_classes": [
                            "ConversationBufferWindowMemory",
                            "BaseMemory",
                            "BaseChatMemory"
                        ],
                        "display_name": "ConversationBufferWindowMemory",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://docs.aiplanet.com/components/memories#conversationbufferwindowmemory",
                        "beta": false,
                        "error": null
                    },
                    "id": "ConversationBufferWindowMemory-veoMn"
                },
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": 1208.0737511868238,
                    "y": 18.450282261173754
                }
            },
            {
                "width": 384,
                "height": 563,
                "id": "RetrievalQAPrompt-yqKtW",
                "type": "genericNode",
                "position": {
                    "x": 1970.9501193318602,
                    "y": 467.3937479958604
                },
                "data": {
                    "type": "RetrievalQAPrompt",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional, Union, Callable\nfrom genflow import CustomComponent\nfrom genflow.field_typing import (\n    BasePromptTemplate,\n    BaseLanguageModel,\n    BaseMemory,\n    Chain,\n    BaseRetriever,\n)\nfrom langchain.chains import RetrievalQA\n\n\nclass RetrievalQAPromptComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a RetrievalQA using Prompt.\n    \"\"\"\n\n    display_name: str = \"RetrievalQAPrompt\"\n    description: str = \"Implementation of RetrievalQA using Prompt\"\n    documentation: str = \"https://docs.aiplanet.com/components/chains#retreivalqaprompt\"\n    beta: bool = True\n    \n    CHAIN_TYPE_OPTIONS = [\n        'stuff','map_reduce','refine','map_rerank'\n    ]\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"chain_type\":{\"display\":\"chain_type\",\"value\":\"stuff\",\"options\":self.CHAIN_TYPE_OPTIONS,\"required\":True},\n            \"llm\":{\"display_name\":\"LLM\",\"required\":True},\n            \"prompt\":{\"display_name\":\"Prompt\",\"required\":True},\n            \"memory\":{\"display_name\":\"Memory\"},\n            \"retriever\":{\"display_name\":\"Retriever\",\"required\":True}\n        }\n\n    def build(\n       self,\n       llm:BaseLanguageModel,\n       prompt: BasePromptTemplate,\n       chain_type:str,\n       retriever: BaseRetriever,\n       memory: Optional[BaseMemory] = None,\n    ) -> Chain:\n        \"\"\"\n        Builds the RetrievalQA with prompt\n\n        Args:\n        - llm: Large Language Models\n        - chain_type: used to load a specific type of chain for question-answering\n        - chain_type_kwargs: chain keywords argument to pass prompt\n        - retriever: vector store to retrieve k relevant context information\n        - memory: memory object to hold chat history\n\n        Returns:\n        - Chain: The RetrievalQA chain with Prompt, Retriever and LLM\n        \"\"\"\n        return RetrievalQA.from_chain_type(llm=llm,\n                                           chain_type=chain_type,\n                                           chain_type_kwargs={\n                                               \"prompt\":prompt,\n                                               \"memory\": memory\n                                               },\n                                           retriever=retriever.as_retriever(search_kwargs={\"k\": 4}),\n                                           return_source_documents=True\n                                    )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chain_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "stuff",
                                "password": false,
                                "options": [
                                    "stuff",
                                    "map_reduce",
                                    "refine",
                                    "map_rerank"
                                ],
                                "name": "chain_type",
                                "display_name": "chain_type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "llm": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "llm",
                                "display_name": "LLM",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseLanguageModel",
                                "list": false
                            },
                            "memory": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "memory",
                                "display_name": "Memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseMemory",
                                "list": false
                            },
                            "prompt": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "prompt",
                                "display_name": "Prompt",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BasePromptTemplate",
                                "list": false
                            },
                            "retriever": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "retriever",
                                "display_name": "Retriever",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseRetriever",
                                "list": false
                            }
                        },
                        "description": "Implementation of RetrievalQA using Prompt",
                        "base_classes": [
                            "Chain"
                        ],
                        "display_name": "RetrievalQAPrompt",
                        "custom_fields": {
                            "chain_type": null,
                            "llm": null,
                            "memory": null,
                            "prompt": null,
                            "retriever": null
                        },
                        "output_types": [
                            "Chain"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/chains#retreivalqaprompt",
                        "beta": true,
                        "error": null
                    },
                    "id": "RetrievalQAPrompt-yqKtW"
                },
                "positionAbsolute": {
                    "x": 1970.9501193318602,
                    "y": 467.3937479958604
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 458,
                "id": "Input-rynr4",
                "type": "genericNode",
                "position": {
                    "x": -723.0326665557611,
                    "y": 64.24414386329437
                },
                "data": {
                    "type": "Input",
                    "node": {
                        "template": {
                            "input_value": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "chapter1.pdf",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input Value",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "file",
                                "list": false,
                                "file_path": "/mnt/models/files/989f5178-a944-41e3-ad4a-16791be930b5/a00a941154b26eb0f944a4f89699189db857fe9e5719f6a74deb6c86cbeb84bc.pdf"
                            },
                            "input_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "Reference Textbook",
                                "password": false,
                                "name": "input_key",
                                "display_name": "Input Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "File",
                                "password": false,
                                "options": [
                                    "File",
                                    "Url",
                                    "Text"
                                ],
                                "name": "input_type",
                                "display_name": "Input Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "Input"
                        },
                        "description": "Input is used to specify the type of input.",
                        "base_classes": [
                            "Input"
                        ],
                        "display_name": "Input",
                        "custom_fields": {},
                        "output_types": [
                            "Input"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/inputs",
                        "beta": false,
                        "error": null
                    },
                    "id": "Input-rynr4"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -723.0326665557611,
                    "y": 64.24414386329437
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 449,
                "id": "ConversationalRetrievalChain-BRszc",
                "type": "genericNode",
                "position": {
                    "x": 444.6766472787715,
                    "y": -218.4211376444434
                },
                "data": {
                    "type": "ConversationalRetrievalChain",
                    "node": {
                        "template": {
                            "callbacks": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "callbacks",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Callbacks",
                                "list": false
                            },
                            "condense_question_llm": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "condense_question_llm",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseLanguageModel",
                                "list": false
                            },
                            "condense_question_prompt": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": {
                                    "input_variables": [
                                        "chat_history",
                                        "question"
                                    ],
                                    "input_types": {},
                                    "output_parser": null,
                                    "partial_variables": {},
                                    "template": "Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:",
                                    "template_format": "f-string",
                                    "validate_template": false
                                },
                                "password": false,
                                "name": "condense_question_prompt",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BasePromptTemplate",
                                "list": false
                            },
                            "llm": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "llm",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseLanguageModel",
                                "list": false
                            },
                            "memory": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseChatMemory",
                                "list": false
                            },
                            "retriever": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "retriever",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseRetriever",
                                "list": false
                            },
                            "chain_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "stuff",
                                "password": false,
                                "options": [
                                    "stuff",
                                    "map_reduce",
                                    "map_rerank",
                                    "refine"
                                ],
                                "name": "chain_type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "combine_docs_chain_kwargs": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "combine_docs_chain_kwargs",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "return_source_documents": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "password": false,
                                "name": "return_source_documents",
                                "display_name": "Return source documents",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "verbose": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "verbose",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "ConversationalRetrievalChain"
                        },
                        "description": "Convenience method to load chain from LLM and retriever.",
                        "base_classes": [
                            "BaseConversationalRetrievalChain",
                            "Chain",
                            "ConversationalRetrievalChain",
                            "Callable"
                        ],
                        "display_name": "ConversationalRetrievalChain",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://docs.aiplanet.com/components/chains#conversationalretrievalchain",
                        "beta": false,
                        "error": null
                    },
                    "id": "ConversationalRetrievalChain-BRszc"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 444.6766472787715,
                    "y": -218.4211376444434
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 339,
                "id": "RetrievalQA-RZHA5",
                "type": "genericNode",
                "position": {
                    "x": -65.25543589389451,
                    "y": 672.5393406234825
                },
                "data": {
                    "type": "RetrievalQA",
                    "node": {
                        "template": {
                            "callbacks": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "callbacks",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "langchain.callbacks.base.BaseCallbackHandler",
                                "list": true
                            },
                            "combine_documents_chain": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "combine_documents_chain",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseCombineDocumentsChain",
                                "list": false
                            },
                            "memory": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseMemory",
                                "list": false
                            },
                            "retriever": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "retriever",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseRetriever",
                                "list": false
                            },
                            "input_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "query",
                                "password": false,
                                "name": "input_key",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "output_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "result",
                                "password": false,
                                "name": "output_key",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "return_source_documents": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "password": false,
                                "name": "return_source_documents",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "tags": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "tags",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "verbose": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "verbose",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "RetrievalQA"
                        },
                        "description": "Chain for question-answering against an index.",
                        "base_classes": [
                            "RetrievalQA",
                            "BaseRetrievalQA",
                            "Chain",
                            "Callable"
                        ],
                        "display_name": "RetrievalQA",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://docs.aiplanet.com/components/chains#retrievalqa-chain",
                        "beta": false,
                        "error": null
                    },
                    "id": "RetrievalQA-RZHA5"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -65.25543589389451,
                    "y": 672.5393406234825
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 449,
                "id": "ConversationalRetrievalChain-kh7e2",
                "type": "genericNode",
                "position": {
                    "x": 127.99394234903389,
                    "y": 137.38721625845005
                },
                "data": {
                    "type": "ConversationalRetrievalChain",
                    "node": {
                        "template": {
                            "callbacks": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "callbacks",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Callbacks",
                                "list": false
                            },
                            "condense_question_llm": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "condense_question_llm",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseLanguageModel",
                                "list": false
                            },
                            "condense_question_prompt": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": {
                                    "input_variables": [
                                        "chat_history",
                                        "question"
                                    ],
                                    "input_types": {},
                                    "output_parser": null,
                                    "partial_variables": {},
                                    "template": "Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:",
                                    "template_format": "f-string",
                                    "validate_template": false
                                },
                                "password": false,
                                "name": "condense_question_prompt",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BasePromptTemplate",
                                "list": false
                            },
                            "llm": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "llm",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseLanguageModel",
                                "list": false
                            },
                            "memory": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseChatMemory",
                                "list": false
                            },
                            "retriever": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "retriever",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseRetriever",
                                "list": false
                            },
                            "chain_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "stuff",
                                "password": false,
                                "options": [
                                    "stuff",
                                    "map_reduce",
                                    "map_rerank",
                                    "refine"
                                ],
                                "name": "chain_type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "combine_docs_chain_kwargs": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "combine_docs_chain_kwargs",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "return_source_documents": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "password": false,
                                "name": "return_source_documents",
                                "display_name": "Return source documents",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "verbose": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "verbose",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "ConversationalRetrievalChain"
                        },
                        "description": "Convenience method to load chain from LLM and retriever.",
                        "base_classes": [
                            "BaseConversationalRetrievalChain",
                            "Chain",
                            "ConversationalRetrievalChain",
                            "Callable"
                        ],
                        "display_name": "ConversationalRetrievalChain",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://docs.aiplanet.com/components/chains#conversationalretrievalchain",
                        "beta": false,
                        "error": null
                    },
                    "id": "ConversationalRetrievalChain-kh7e2"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 127.99394234903389,
                    "y": 137.38721625845005
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "source": "PyPDFLoader-ffH98",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-ffH98œ}",
                "target": "RecursiveCharacterTextSplitter-dKM2D",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-dKM2Dœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "RecursiveCharacterTextSplitter-dKM2D",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "PyPDFLoader",
                        "id": "PyPDFLoader-ffH98"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-PyPDFLoader-ffH98{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-ffH98œ}-RecursiveCharacterTextSplitter-dKM2D{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-dKM2Dœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "RecursiveCharacterTextSplitter-dKM2D",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-dKM2Dœ}",
                "target": "Chroma-ToqGZ",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-ToqGZœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "Chroma-ToqGZ",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "RecursiveCharacterTextSplitter",
                        "id": "RecursiveCharacterTextSplitter-dKM2D"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-RecursiveCharacterTextSplitter-dKM2D{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-dKM2Dœ}-Chroma-ToqGZ{œfieldNameœ:œdocumentsœ,œidœ:œChroma-ToqGZœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "HuggingFaceEmbeddingInferenceAPI-VPfYY",
                "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-VPfYYœ}",
                "target": "Chroma-ToqGZ",
                "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-ToqGZœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "embedding",
                        "id": "Chroma-ToqGZ",
                        "inputTypes": null,
                        "type": "Embeddings"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Embeddings"
                        ],
                        "dataType": "HuggingFaceEmbeddingInferenceAPI",
                        "id": "HuggingFaceEmbeddingInferenceAPI-VPfYY"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-HuggingFaceEmbeddingInferenceAPI-VPfYY{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-VPfYYœ}-Chroma-ToqGZ{œfieldNameœ:œembeddingœ,œidœ:œChroma-ToqGZœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
            },
            {
                "source": "Chroma-ToqGZ",
                "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-ToqGZœ}",
                "target": "RetrievalQAPrompt-yqKtW",
                "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQAPrompt-yqKtWœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "retriever",
                        "id": "RetrievalQAPrompt-yqKtW",
                        "inputTypes": null,
                        "type": "BaseRetriever"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "VectorStore",
                            "BaseRetriever"
                        ],
                        "dataType": "Chroma",
                        "id": "Chroma-ToqGZ"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-Chroma-ToqGZ{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-ToqGZœ}-RetrievalQAPrompt-yqKtW{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQAPrompt-yqKtWœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}"
            },
            {
                "source": "PromptTemplate-uYRxo",
                "sourceHandle": "{œbaseClassesœ:[œPromptTemplateœ,œBasePromptTemplateœ,œStringPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-uYRxoœ}",
                "target": "RetrievalQAPrompt-yqKtW",
                "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œRetrievalQAPrompt-yqKtWœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "prompt",
                        "id": "RetrievalQAPrompt-yqKtW",
                        "inputTypes": null,
                        "type": "BasePromptTemplate"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "PromptTemplate",
                            "BasePromptTemplate",
                            "StringPromptTemplate"
                        ],
                        "dataType": "PromptTemplate",
                        "id": "PromptTemplate-uYRxo"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-PromptTemplate-uYRxo{œbaseClassesœ:[œPromptTemplateœ,œBasePromptTemplateœ,œStringPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-uYRxoœ}-RetrievalQAPrompt-yqKtW{œfieldNameœ:œpromptœ,œidœ:œRetrievalQAPrompt-yqKtWœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
            },
            {
                "source": "ConversationBufferWindowMemory-veoMn",
                "sourceHandle": "{œbaseClassesœ:[œConversationBufferWindowMemoryœ,œBaseMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferWindowMemoryœ,œidœ:œConversationBufferWindowMemory-veoMnœ}",
                "target": "RetrievalQAPrompt-yqKtW",
                "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œRetrievalQAPrompt-yqKtWœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "memory",
                        "id": "RetrievalQAPrompt-yqKtW",
                        "inputTypes": null,
                        "type": "BaseMemory"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "ConversationBufferWindowMemory",
                            "BaseMemory",
                            "BaseChatMemory"
                        ],
                        "dataType": "ConversationBufferWindowMemory",
                        "id": "ConversationBufferWindowMemory-veoMn"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-ConversationBufferWindowMemory-veoMn{œbaseClassesœ:[œConversationBufferWindowMemoryœ,œBaseMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferWindowMemoryœ,œidœ:œConversationBufferWindowMemory-veoMnœ}-RetrievalQAPrompt-yqKtW{œfieldNameœ:œmemoryœ,œidœ:œRetrievalQAPrompt-yqKtWœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}"
            },
            {
                "source": "AzureChatOpenAI-29xdg",
                "sourceHandle": "{œbaseClassesœ:[œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œAzureChatOpenAIœ,œidœ:œAzureChatOpenAI-29xdgœ}",
                "target": "RetrievalQAPrompt-yqKtW",
                "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œRetrievalQAPrompt-yqKtWœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "llm",
                        "id": "RetrievalQAPrompt-yqKtW",
                        "inputTypes": null,
                        "type": "BaseLanguageModel"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseLLM",
                            "BaseLanguageModel"
                        ],
                        "dataType": "AzureChatOpenAI",
                        "id": "AzureChatOpenAI-29xdg"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-AzureChatOpenAI-29xdg{œbaseClassesœ:[œBaseLLMœ,œBaseLanguageModelœ],œdataTypeœ:œAzureChatOpenAIœ,œidœ:œAzureChatOpenAI-29xdgœ}-RetrievalQAPrompt-yqKtW{œfieldNameœ:œllmœ,œidœ:œRetrievalQAPrompt-yqKtWœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
            },
            {
                "source": "Input-rynr4",
                "sourceHandle": "{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-rynr4œ}",
                "target": "PyPDFLoader-ffH98",
                "targetHandle": "{œfieldNameœ:œfile_pathœ,œidœ:œPyPDFLoader-ffH98œ,œinputTypesœ:[œInputœ],œtypeœ:œfileœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "file_path",
                        "id": "PyPDFLoader-ffH98",
                        "inputTypes": [
                            "Input"
                        ],
                        "type": "file"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Input"
                        ],
                        "dataType": "Input",
                        "id": "Input-rynr4"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-Input-rynr4{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-rynr4œ}-PyPDFLoader-ffH98{œfieldNameœ:œfile_pathœ,œidœ:œPyPDFLoader-ffH98œ,œinputTypesœ:[œInputœ],œtypeœ:œfileœ}"
            }
        ],
        "viewport": {
            "x": 593.4260802184997,
            "y": 363.5274232933586,
            "zoom": 0.3934928439368214
        }
    },
    "description": "Khanmigo prompts for Ed Tech chatbot for children.",
    "name": "EdTechChatbot",
    "flow_type": "chat"
}