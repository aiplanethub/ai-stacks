{
    "id": "aaf3ca7f-e39f-46a6-bb3e-4cbb7e9f4f04",
    "data": {
        "nodes": [
            {
                "width": 384,
                "height": 502,
                "id": "RecursiveCharacterTextSplitter-b7krs",
                "type": "genericNode",
                "position": {
                    "x": 301.6404754829381,
                    "y": -264.66271886854213
                },
                "data": {
                    "type": "RecursiveCharacterTextSplitter",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow import CustomComponent\nfrom langchain.schema import Document\nfrom genflow.utils.util import build_loader_repr_from_documents\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        self.repr_value = build_loader_repr_from_documents(docs)\n        return docs\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chunk_overlap": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 200,
                                "password": false,
                                "name": "chunk_overlap",
                                "display_name": "Chunk Overlap",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The amount of overlap between chunks.",
                                "type": "int",
                                "list": false
                            },
                            "chunk_size": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 1000,
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Chunk Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The maximum length of each chunk.",
                                "type": "int",
                                "list": false
                            },
                            "documents": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The documents to split.",
                                "type": "Document",
                                "list": true
                            },
                            "separators": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "separators",
                                "display_name": "Separators",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].",
                                "type": "str",
                                "list": true
                            }
                        },
                        "description": "Split text into chunks of a specified length.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "Recursive Character Text Splitter",
                        "custom_fields": {
                            "chunk_overlap": null,
                            "chunk_size": null,
                            "documents": null,
                            "separators": null
                        },
                        "output_types": [
                            "RecursiveCharacterTextSplitter"
                        ],
                        "documentation": "https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter",
                        "beta": true,
                        "error": null
                    },
                    "id": "RecursiveCharacterTextSplitter-b7krs"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 301.6404754829381,
                    "y": -264.66271886854213
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 563,
                "id": "CustomComponent-4vHeb",
                "type": "genericNode",
                "position": {
                    "x": 2513.6451117487613,
                    "y": -61.415810185453324
                },
                "data": {
                    "type": "CustomComponent",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional, Union, Callable\nfrom genflow import CustomComponent\nfrom genflow.field_typing import (\n    BasePromptTemplate,\n    BaseLanguageModel,\n    BaseMemory,\n    Chain,\n    BaseRetriever,\n)\nfrom langchain.chains import RetrievalQA\n\n\nclass RetrievalQAPromptComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a RetrievalQA using Prompt.\n    \"\"\"\n\n    display_name: str = \"RetrievalQAPrompt\"\n    description: str = \"Implementation of RetrievalQA using Prompt\"\n    beta: bool = True\n\n    CHAIN_TYPE_OPTIONS = [\n        'stuff','map_reduce','refine','map_rerank'\n    ]\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"chain_type\":{\"display\":\"chain_type\",\"value\":\"stuff\",\"options\":self.CHAIN_TYPE_OPTIONS,\"required\":True},\n            \"llm\":{\"display_name\":\"LLM\",\"required\":True},\n            \"prompt\":{\"display_name\":\"Prompt\",\"required\":True},\n            \"memory\":{\"display_name\":\"Memory\"},\n            \"retriever\":{\"display_name\":\"Retriever\",\"required\":True}\n        }\n\n    def build(\n       self,\n       llm:BaseLanguageModel,\n       prompt: BasePromptTemplate,\n       chain_type:str,\n       retriever: BaseRetriever,\n       memory: Optional[BaseMemory] = None,\n    ) -> Chain:\n        \"\"\"\n        Builds the RetrievalQA with prompt\n        Args:\n        - llm: Large Language Models\n        - chain_type: used to load a specific type of chain for question-answering\n        - chain_type_kwargs: chain keywords argument to pass prompt\n        - retriever: vector store to retrieve k relevant context information\n        Returns:\n        - Chain: The RetrievalQA chain with Prompt, Retriever and LLM\n        \"\"\"\n        return RetrievalQA.from_chain_type(llm=llm,\n                                           chain_type=chain_type,\n                                           chain_type_kwargs={\"prompt\":prompt},\n                                           retriever=retriever,\n                                           return_source_documents=True\n                                    )",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chain_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "stuff",
                                "password": false,
                                "options": [
                                    "stuff",
                                    "map_reduce",
                                    "refine",
                                    "map_rerank"
                                ],
                                "name": "chain_type",
                                "display_name": "chain_type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "llm": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "llm",
                                "display_name": "LLM",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseLanguageModel",
                                "list": false
                            },
                            "memory": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "memory",
                                "display_name": "Memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseMemory",
                                "list": false
                            },
                            "prompt": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "prompt",
                                "display_name": "Prompt",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BasePromptTemplate",
                                "list": false
                            },
                            "retriever": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "retriever",
                                "display_name": "Retriever",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseRetriever",
                                "list": false
                            }
                        },
                        "description": "Implementation of RetrievalQA using Prompt",
                        "base_classes": [
                            "Chain"
                        ],
                        "display_name": "RetrievalQAPrompt",
                        "custom_fields": {
                            "chain_type": null,
                            "llm": null,
                            "memory": null,
                            "prompt": null,
                            "retriever": null
                        },
                        "output_types": [
                            "Chain"
                        ],
                        "documentation": "",
                        "beta": true,
                        "error": null
                    },
                    "id": "CustomComponent-4vHeb"
                },
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": 2513.6451117487613,
                    "y": -61.415810185453324
                }
            },
            {
                "width": 384,
                "height": 470,
                "id": "PromptTemplate-xZmXS",
                "type": "genericNode",
                "position": {
                    "x": 1223.3395330676794,
                    "y": -789.8033306382597
                },
                "data": {
                    "type": "PromptTemplate",
                    "node": {
                        "template": {
                            "output_parser": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "output_parser",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "BaseOutputParser",
                                "list": false
                            },
                            "input_types": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "input_types",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "input_variables": {
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "input_variables",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "str",
                                "list": true,
                                "value": [
                                    "context",
                                    "question"
                                ]
                            },
                            "partial_variables": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "partial_variables",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "template": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "password": false,
                                "name": "template",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "prompt",
                                "list": false,
                                "value": "<|system|>\nYou are an expert on car maintenance. You are an the Toyota Car Manual come to life. Please provide detailed and accurate information about the query, covering steps, tips, and potential issues using the below context\nAssume the user has basic knowledge but needs expert guidance. If the request is outside the scope of the context you have, let the user know that you don't know the answer as it is not mentioned\nin the car manual. Do not make up answers that are not in the context.\n\nCONTEXT: {context}\n</s>\n<|user|>\n{question}\n</s>\n<|assistant|>"
                            },
                            "template_format": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": "f-string",
                                "password": false,
                                "name": "template_format",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "validate_template": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "validate_template",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "PromptTemplate",
                            "context": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "context",
                                "display_name": "context",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "question": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "question",
                                "display_name": "question",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "A prompt template for a language model.",
                        "base_classes": [
                            "BasePromptTemplate",
                            "PromptTemplate",
                            "StringPromptTemplate"
                        ],
                        "name": "",
                        "display_name": "PromptTemplate",
                        "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
                        "custom_fields": {
                            "": [
                                "context",
                                "question"
                            ],
                            "template": [
                                "context",
                                "question"
                            ]
                        },
                        "output_types": [],
                        "field_formatters": {},
                        "beta": false,
                        "error": null
                    },
                    "id": "PromptTemplate-xZmXS"
                },
                "positionAbsolute": {
                    "x": 1223.3395330676794,
                    "y": -789.8033306382597
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 483,
                "id": "EnsembleRetriever-gn9Tq",
                "type": "genericNode",
                "position": {
                    "x": 1676.322024085517,
                    "y": 474.0387768446619
                },
                "data": {
                    "type": "EnsembleRetriever",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import List\nfrom langchain.retrievers import BM25Retriever, EnsembleRetriever\nfrom langchain.schema import Document, BaseRetriever\nfrom langchain.vectorstores.base import VectorStore\n\nfrom genflow import CustomComponent\n\n\nclass EnsembleRetrieverComponent(CustomComponent):\n    display_name: str = \"Ensemble Retriever\"\n    description: str = \"The EnsembleRetriever takes a list of retrievers as input.\"\n    documentation: str = (\n        \"https://python.langchain.com/docs/modules/data_connection/retrievers/ensemble\"\n    )\n    beta = False\n\n    def build_config(self):\n        return {\n            \"documents\": {\"display_name\": \"Documents\"},\n            \"retrievers\": {\n                \"display_name\": \"Retrievers\",\n            },\n            \"top_k\": {\n                \"display_name\": \"Top K\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": 2,\n                \"info\": \"The number of results to return.\",\n            },\n            \"weights\": {\n                \"display_name\": \"Weights\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"0.5, 0.5\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        top_k: int,\n        weights: str,\n        documents: List[Document],\n        retrievers: List[VectorStore],\n    ) -> BaseRetriever:\n        docs = [document.page_content for document in documents]\n        bm25_retriever = BM25Retriever.from_texts(docs)\n        bm25_retriever.k = top_k\n\n        _retrievers = [\n            _retriever.as_retriever(search_kwargs={\"k\": top_k})\n            for _retriever in retrievers\n        ]\n        _retrievers.append(bm25_retriever)\n\n        _weights = [\n            int(_weight) if isinstance(_weight, int) else float(_weight)\n            for _weight in weights.split(\",\")\n        ]\n\n        return EnsembleRetriever(retrievers=_retrievers, weights=_weights)\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "documents": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Document",
                                "list": true
                            },
                            "retrievers": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "retrievers",
                                "display_name": "Retrievers",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "VectorStore",
                                "list": true
                            },
                            "top_k": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "4",
                                "password": false,
                                "name": "top_k",
                                "display_name": "Top K",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The number of results to return.",
                                "type": "int",
                                "list": false
                            },
                            "weights": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "0.5, 0.5",
                                "password": false,
                                "name": "weights",
                                "display_name": "Weights",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "The EnsembleRetriever takes a list of retrievers as input.",
                        "base_classes": [
                            "BaseRetriever"
                        ],
                        "display_name": "Ensemble Retriever",
                        "custom_fields": {
                            "documents": null,
                            "retrievers": null,
                            "top_k": null,
                            "weights": null
                        },
                        "output_types": [
                            "EnsembleRetriever"
                        ],
                        "documentation": "https://python.langchain.com/docs/modules/data_connection/retrievers/ensemble",
                        "beta": false,
                        "error": null
                    },
                    "id": "EnsembleRetriever-gn9Tq"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1676.322024085517,
                    "y": 474.0387768446619
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 579,
                "id": "ConversationBufferMemory-cXCe0",
                "type": "genericNode",
                "position": {
                    "x": 1073.9767590517165,
                    "y": -225.2373072233808
                },
                "data": {
                    "type": "ConversationBufferMemory",
                    "node": {
                        "template": {
                            "chat_memory": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chat_memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseChatMessageHistory",
                                "list": false
                            },
                            "ai_prefix": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": "AI",
                                "password": false,
                                "name": "ai_prefix",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "human_prefix": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": "Human",
                                "password": false,
                                "name": "human_prefix",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": false,
                                "name": "input_key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The variable to be used as Chat Input when more than one variable is available.",
                                "type": "str",
                                "list": false
                            },
                            "memory_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "chat_history",
                                "password": false,
                                "name": "memory_key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "output_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": false,
                                "name": "output_key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                                "type": "str",
                                "list": false
                            },
                            "return_messages": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "return_messages",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false,
                                "value": true
                            },
                            "_type": "ConversationBufferMemory"
                        },
                        "description": "Buffer for storing conversation memory.",
                        "base_classes": [
                            "ConversationBufferMemory",
                            "BaseChatMemory",
                            "BaseMemory"
                        ],
                        "display_name": "ConversationBufferMemory",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://python.langchain.com/docs/modules/memory/how_to/buffer",
                        "beta": false,
                        "error": null
                    },
                    "id": "ConversationBufferMemory-cXCe0"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1073.9767590517165,
                    "y": -225.2373072233808
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 388,
                "id": "HuggingFaceEmbeddingInferenceAPI-ScPc3",
                "type": "genericNode",
                "position": {
                    "x": -47.295101284388494,
                    "y": 305.39477746876946
                },
                "data": {
                    "type": "HuggingFaceEmbeddingInferenceAPI",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from genflow import CustomComponent\nfrom langchain.embeddings.base import Embeddings\nfrom langchain.embeddings import HuggingFaceInferenceAPIEmbeddings\n\n\nclass HuggingFaceInferenceAPIEmbeddingsComponent(CustomComponent):\n    display_name: str = \"HuggingFaceInferenceAPI Embeddings\"\n    description: str = \"\"\"Access HuggingFaceEmbedding model via inference api,download models locally.\"\"\"\n    documentation: str = \"https://docs.aiplanet.com/components/embeddings#huggingface-inference-api-embeddings\"\n    beta = False\n\n    def build_config(self):\n        return {\n            \"inference_api_key\": {\n                \"display_name\": \"Inference API Key\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(self, inference_api_key: str, model_name: str) -> Embeddings:\n        return HuggingFaceInferenceAPIEmbeddings(\n            api_key=inference_api_key, model_name=model_name\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "inference_api_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "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",
                                "password": false,
                                "name": "inference_api_key",
                                "display_name": "Inference API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "model_name": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "BAAI/bge-small-en-v1.5",
                                "password": false,
                                "name": "model_name",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Access HuggingFaceEmbedding model via inference api,download models locally.",
                        "base_classes": [
                            "Embeddings"
                        ],
                        "display_name": "HuggingFaceInferenceAPI Embeddings",
                        "custom_fields": {
                            "inference_api_key": null,
                            "model_name": null
                        },
                        "output_types": [
                            "HuggingFaceEmbeddingInferenceAPI"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/embeddings#huggingface-inference-api-embeddings",
                        "beta": false,
                        "error": null
                    },
                    "id": "HuggingFaceEmbeddingInferenceAPI-ScPc3"
                },
                "positionAbsolute": {
                    "x": -47.295101284388494,
                    "y": 305.39477746876946
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 291,
                "id": "Chroma-i50Cx",
                "type": "genericNode",
                "position": {
                    "x": 789.2201730051612,
                    "y": 550.4118480009973
                },
                "data": {
                    "type": "Chroma",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional, Union\nfrom genflow import CustomComponent\n\nfrom langchain.vectorstores.chroma import Chroma\nfrom langchain.schema import Document\nfrom langchain.vectorstores.base import VectorStore\nfrom langchain.schema import BaseRetriever\nfrom langchain.embeddings.base import Embeddings\nimport chromadb  # type: ignore\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://docs.aiplanet.com/components/vector-store#chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\n                \"display_name\": \"Collection Name\",\n                \"value\": \"genflow\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"persist\": {\n                \"display_name\": \"Persist\",\n                \"value\": True,\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"persist_directory\": {\n                \"display_name\": \"Persist Directory\",\n                \"value\": \"/mnt/models/chroma\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        chroma_server_ssl_enabled: bool,\n        collection_name: Optional[str] = \"genflow\",\n        persist: Optional[bool] = True,\n        persist_directory: Optional[str] = \"/mnt/models/chroma\",\n        embedding: Optional[Embeddings] = None,\n        documents: Optional[Document] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins\n                or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        if embedding is not None:\n            return Chroma(\n                persist_directory=persist_directory,\n                client_settings=chroma_settings,\n                embedding_function=embedding,\n                collection_name=collection_name,\n            )\n\n        return Chroma(\n            persist_directory=persist_directory, client_settings=chroma_settings\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chroma_server_cors_allow_origins": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_cors_allow_origins",
                                "display_name": "Server CORS Allow Origins",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "chroma_server_grpc_port": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_grpc_port",
                                "display_name": "Server gRPC Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "chroma_server_host": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_host",
                                "display_name": "Server Host",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "chroma_server_port": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_port",
                                "display_name": "Server Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "chroma_server_ssl_enabled": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "chroma_server_ssl_enabled",
                                "display_name": "Server SSL Enabled",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "collection_name": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "genflow",
                                "password": false,
                                "name": "collection_name",
                                "display_name": "Collection Name",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "documents": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Document",
                                "list": true
                            },
                            "embedding": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "embedding",
                                "display_name": "Embedding",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Embeddings",
                                "list": false
                            },
                            "persist": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "password": false,
                                "name": "persist",
                                "display_name": "Persist",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "persist_directory": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "/mnt/models/chroma",
                                "password": false,
                                "name": "persist_directory",
                                "display_name": "Persist Directory",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Implementation of Vector Store using Chroma",
                        "base_classes": [
                            "VectorStore",
                            "BaseRetriever"
                        ],
                        "display_name": "Chroma",
                        "custom_fields": {
                            "chroma_server_cors_allow_origins": null,
                            "chroma_server_grpc_port": null,
                            "chroma_server_host": null,
                            "chroma_server_port": null,
                            "chroma_server_ssl_enabled": null,
                            "collection_name": null,
                            "documents": null,
                            "embedding": null,
                            "persist": null,
                            "persist_directory": null
                        },
                        "output_types": [
                            "Chroma"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/vector-store#chroma",
                        "beta": true,
                        "error": null
                    },
                    "id": "Chroma-i50Cx"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 789.2201730051612,
                    "y": 550.4118480009973
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 548,
                "id": "AzureAIDocumentIntelligenceLoader-6XOX1",
                "type": "genericNode",
                "position": {
                    "x": -251.74718136609184,
                    "y": -435.1413372880433
                },
                "data": {
                    "type": "AzureAIDocumentIntelligenceLoader",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import List\nfrom genflow.interface.custom.custom_component import CustomComponent\nfrom langchain_community.document_loaders import AzureAIDocumentIntelligenceLoader\nfrom langchain.schema import Document\n\n\nclass AzureAIDocumentIntelligenceLoaderComponent(CustomComponent):\n    display_name: str = \"AzureAIDocumentIntelligenceLoader\"\n    description: str = \"Azure ai document intelligence Loader.\"\n    documentation: str = \"https://docs.aiplanet.com/components/document-loaders#azureai-document-intelligence-loader\"\n\n    def build_config(self):\n        return {\n            \"file_path\": {\n                \"display_name\": \"File Path\",\n                \"required\": True,\n                \"field_type\": \"file\",\n                \"file_types\": [\"pdf\", \"jpeg\", \"png\", \"bmp\", \"tiff\"],\n                \"suffixes\": [\n                    \".pdf\",\n                    \".jpg\",\n                    \".jpeg\",\n                    \".png\",\n                    \".bmp\",\n                    \".dib\" \".tiff\",\n                    \".tif\",\n                ],\n                \"input_types\": [\"Input\"],\n            },\n            \"endpoint\": {\"display_name\": \"Endpoint\", \"required\": True},\n            \"key\": {\"display_name\": \"Key\", \"required\": True, \"password\": True},\n            \"api_model\": {\n                \"display_name\": \"API Model\",\n                \"required\": True,\n                \"value\": \"prebuilt-layout\",\n            },\n            \"code\": {\"show\": False},\n            \"file_size\": {\n                \"display_name\": \"File Size\",\n                \"required\": True,\n                \"advanced\": True,\n                \"field_type\": \"int\",\n                \"value\": 20,\n            },\n        }\n\n    def build(\n        self, file_path: str, endpoint: str, key: str, api_model: str, file_size: int\n    ) -> List[Document]:\n        loader = AzureAIDocumentIntelligenceLoader(\n            api_endpoint=endpoint, api_key=key, file_path=file_path, api_model=api_model\n        )\n        results = loader.load()\n        return results\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "api_model": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "prebuilt-layout",
                                "password": false,
                                "name": "api_model",
                                "display_name": "API Model",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "endpoint": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "endpoint",
                                "display_name": "Endpoint",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": "https://fullstackai.cognitiveservices.azure.com/"
                            },
                            "file_path": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "suffixes": [
                                    ".pdf",
                                    ".jpg",
                                    ".jpeg",
                                    ".png",
                                    ".bmp",
                                    ".dib.tiff",
                                    ".tif"
                                ],
                                "password": false,
                                "name": "file_path",
                                "display_name": "File Path",
                                "advanced": false,
                                "input_types": [
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "file",
                                "list": false,
                                "fileTypes": [
                                    "pdf",
                                    "jpeg",
                                    "png",
                                    "bmp",
                                    "tiff"
                                ],
                                "file_path": "/mnt/models/files/aaf3ca7f-e39f-46a6-bb3e-4cbb7e9f4f04/5bde02d62fc8729f40f36c9268501700f0bda1903328451b0a8383e2e206cd1e.pdf",
                                "value": ""
                            },
                            "file_size": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 20,
                                "password": false,
                                "name": "file_size",
                                "display_name": "File Size",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "key",
                                "display_name": "Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "value": ""
                            }
                        },
                        "description": "Azure ai document intelligence Loader.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "AzureAIDocumentIntelligenceLoader",
                        "custom_fields": {
                            "api_model": null,
                            "endpoint": null,
                            "file_path": null,
                            "file_size": null,
                            "key": null
                        },
                        "output_types": [
                            "AzureAIDocumentIntelligenceLoader"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/document-loaders#azureai-document-intelligence-loader",
                        "beta": true,
                        "error": null
                    },
                    "id": "AzureAIDocumentIntelligenceLoader-6XOX1"
                },
                "positionAbsolute": {
                    "x": -251.74718136609184,
                    "y": -435.1413372880433
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 630,
                "id": "ChatOpenAI-Z0eQY",
                "type": "genericNode",
                "position": {
                    "x": 2041.7777305732843,
                    "y": -797.76165755759
                },
                "data": {
                    "type": "ChatOpenAI",
                    "node": {
                        "template": {
                            "callbacks": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "callbacks",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "langchain.callbacks.base.BaseCallbackHandler",
                                "list": true
                            },
                            "async_client": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "async_client",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Any",
                                "list": false
                            },
                            "cache": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "cache",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "client": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "client",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Any",
                                "list": false
                            },
                            "default_headers": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "default_headers",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "default_query": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "default_query",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "http_client": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "http_client",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Any",
                                "list": false
                            },
                            "max_retries": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": 2,
                                "password": false,
                                "name": "max_retries",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "max_tokens": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "max_tokens",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false,
                                "value": ""
                            },
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "model_kwargs": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "model_kwargs",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "model_name": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "gpt-3.5-turbo",
                                "password": false,
                                "options": [
                                    "gpt-4-1106-preview",
                                    "gpt-4",
                                    "gpt-4-32k",
                                    "gpt-3.5-turbo",
                                    "gpt-3.5-turbo-16k"
                                ],
                                "name": "model_name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "n": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": 1,
                                "password": false,
                                "name": "n",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "openai_api_base": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "openai_api_base",
                                "display_name": "OpenAI API Base",
                                "advanced": false,
                                "dynamic": false,
                                "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                                "type": "str",
                                "list": false
                            },
                            "openai_api_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": true,
                                "name": "openai_api_key",
                                "display_name": "OpenAI API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "openai_organization": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "openai_organization",
                                "display_name": "OpenAI Organization",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "openai_proxy": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "openai_proxy",
                                "display_name": "OpenAI Proxy",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "request_timeout": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "request_timeout",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "float",
                                "list": false
                            },
                            "streaming": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "streaming",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "tags": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "tags",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "temperature": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "0.3",
                                "password": false,
                                "name": "temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "float",
                                "list": false
                            },
                            "tiktoken_model_name": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "tiktoken_model_name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "verbose": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "verbose",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "ChatOpenAI"
                        },
                        "description": "`OpenAI` Chat large language models API.",
                        "base_classes": [
                            "BaseLanguageModel",
                            "ChatOpenAI",
                            "BaseChatModel",
                            "BaseLLM"
                        ],
                        "display_name": "ChatOpenAI",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://docs.aiplanet.com/components/large-language-models#chatopenai",
                        "beta": false,
                        "error": null
                    },
                    "id": "ChatOpenAI-Z0eQY"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 2041.7777305732843,
                    "y": -797.76165755759
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 458,
                "id": "Input-WCesY",
                "type": "genericNode",
                "position": {
                    "x": -823.6837080314572,
                    "y": -574.4040635312692
                },
                "data": {
                    "type": "Input",
                    "node": {
                        "template": {
                            "input_value": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input Value",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "file",
                                "list": false,
                                "file_path": null
                            },
                            "input_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "User Car Manual",
                                "password": false,
                                "name": "input_key",
                                "display_name": "Input Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "File",
                                "password": false,
                                "options": [
                                    "File",
                                    "Url",
                                    "Text"
                                ],
                                "name": "input_type",
                                "display_name": "Input Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "Input"
                        },
                        "description": "Input is used to specify the type of input.",
                        "base_classes": [
                            "Input"
                        ],
                        "display_name": "Input",
                        "custom_fields": {},
                        "output_types": [
                            "Input"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/inputs",
                        "beta": false,
                        "error": null
                    },
                    "id": "Input-WCesY"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -823.6837080314572,
                    "y": -574.4040635312692
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "source": "PromptTemplate-xZmXS",
                "sourceHandle": "{œbaseClassesœ:[œBasePromptTemplateœ,œPromptTemplateœ,œStringPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-xZmXSœ}",
                "target": "CustomComponent-4vHeb",
                "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-4vHebœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "prompt",
                        "id": "CustomComponent-4vHeb",
                        "inputTypes": null,
                        "type": "BasePromptTemplate"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BasePromptTemplate",
                            "PromptTemplate",
                            "StringPromptTemplate"
                        ],
                        "dataType": "PromptTemplate",
                        "id": "PromptTemplate-xZmXS"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-PromptTemplate-xZmXS{œbaseClassesœ:[œBasePromptTemplateœ,œPromptTemplateœ,œStringPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-xZmXSœ}-CustomComponent-4vHeb{œfieldNameœ:œpromptœ,œidœ:œCustomComponent-4vHebœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
            },
            {
                "source": "EnsembleRetriever-gn9Tq",
                "sourceHandle": "{œbaseClassesœ:[œBaseRetrieverœ],œdataTypeœ:œEnsembleRetrieverœ,œidœ:œEnsembleRetriever-gn9Tqœ}",
                "target": "CustomComponent-4vHeb",
                "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œCustomComponent-4vHebœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "retriever",
                        "id": "CustomComponent-4vHeb",
                        "inputTypes": null,
                        "type": "BaseRetriever"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseRetriever"
                        ],
                        "dataType": "EnsembleRetriever",
                        "id": "EnsembleRetriever-gn9Tq"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-EnsembleRetriever-gn9Tq{œbaseClassesœ:[œBaseRetrieverœ],œdataTypeœ:œEnsembleRetrieverœ,œidœ:œEnsembleRetriever-gn9Tqœ}-CustomComponent-4vHeb{œfieldNameœ:œretrieverœ,œidœ:œCustomComponent-4vHebœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}"
            },
            {
                "source": "RecursiveCharacterTextSplitter-b7krs",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-b7krsœ}",
                "target": "EnsembleRetriever-gn9Tq",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œEnsembleRetriever-gn9Tqœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "EnsembleRetriever-gn9Tq",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "RecursiveCharacterTextSplitter",
                        "id": "RecursiveCharacterTextSplitter-b7krs"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-RecursiveCharacterTextSplitter-b7krs{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-b7krsœ}-EnsembleRetriever-gn9Tq{œfieldNameœ:œdocumentsœ,œidœ:œEnsembleRetriever-gn9Tqœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "ConversationBufferMemory-cXCe0",
                "sourceHandle": "{œbaseClassesœ:[œConversationBufferMemoryœ,œBaseChatMemoryœ,œBaseMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-cXCe0œ}",
                "target": "CustomComponent-4vHeb",
                "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œCustomComponent-4vHebœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "memory",
                        "id": "CustomComponent-4vHeb",
                        "inputTypes": null,
                        "type": "BaseMemory"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "ConversationBufferMemory",
                            "BaseChatMemory",
                            "BaseMemory"
                        ],
                        "dataType": "ConversationBufferMemory",
                        "id": "ConversationBufferMemory-cXCe0"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-ConversationBufferMemory-cXCe0{œbaseClassesœ:[œConversationBufferMemoryœ,œBaseChatMemoryœ,œBaseMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-cXCe0œ}-CustomComponent-4vHeb{œfieldNameœ:œmemoryœ,œidœ:œCustomComponent-4vHebœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}"
            },
            {
                "source": "HuggingFaceEmbeddingInferenceAPI-ScPc3",
                "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-ScPc3œ}",
                "target": "Chroma-i50Cx",
                "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-i50Cxœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "embedding",
                        "id": "Chroma-i50Cx",
                        "inputTypes": null,
                        "type": "Embeddings"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Embeddings"
                        ],
                        "dataType": "HuggingFaceEmbeddingInferenceAPI",
                        "id": "HuggingFaceEmbeddingInferenceAPI-ScPc3"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-HuggingFaceEmbeddingInferenceAPI-ScPc3{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-ScPc3œ}-Chroma-i50Cx{œfieldNameœ:œembeddingœ,œidœ:œChroma-i50Cxœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
            },
            {
                "source": "RecursiveCharacterTextSplitter-b7krs",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-b7krsœ}",
                "target": "Chroma-i50Cx",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-i50Cxœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "Chroma-i50Cx",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "RecursiveCharacterTextSplitter",
                        "id": "RecursiveCharacterTextSplitter-b7krs"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-RecursiveCharacterTextSplitter-b7krs{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-b7krsœ}-Chroma-i50Cx{œfieldNameœ:œdocumentsœ,œidœ:œChroma-i50Cxœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "Chroma-i50Cx",
                "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-i50Cxœ}",
                "target": "EnsembleRetriever-gn9Tq",
                "targetHandle": "{œfieldNameœ:œretrieversœ,œidœ:œEnsembleRetriever-gn9Tqœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "retrievers",
                        "id": "EnsembleRetriever-gn9Tq",
                        "inputTypes": null,
                        "type": "VectorStore"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "VectorStore",
                            "BaseRetriever"
                        ],
                        "dataType": "Chroma",
                        "id": "Chroma-i50Cx"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-Chroma-i50Cx{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-i50Cxœ}-EnsembleRetriever-gn9Tq{œfieldNameœ:œretrieversœ,œidœ:œEnsembleRetriever-gn9Tqœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}"
            },
            {
                "source": "AzureAIDocumentIntelligenceLoader-6XOX1",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œAzureAIDocumentIntelligenceLoaderœ,œidœ:œAzureAIDocumentIntelligenceLoader-6XOX1œ}",
                "target": "RecursiveCharacterTextSplitter-b7krs",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-b7krsœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "RecursiveCharacterTextSplitter-b7krs",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "AzureAIDocumentIntelligenceLoader",
                        "id": "AzureAIDocumentIntelligenceLoader-6XOX1"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-AzureAIDocumentIntelligenceLoader-6XOX1{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œAzureAIDocumentIntelligenceLoaderœ,œidœ:œAzureAIDocumentIntelligenceLoader-6XOX1œ}-RecursiveCharacterTextSplitter-b7krs{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-b7krsœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "ChatOpenAI-Z0eQY",
                "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-Z0eQYœ}",
                "target": "CustomComponent-4vHeb",
                "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCustomComponent-4vHebœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "llm",
                        "id": "CustomComponent-4vHeb",
                        "inputTypes": null,
                        "type": "BaseLanguageModel"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseLanguageModel",
                            "ChatOpenAI",
                            "BaseChatModel",
                            "BaseLLM"
                        ],
                        "dataType": "ChatOpenAI",
                        "id": "ChatOpenAI-Z0eQY"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-ChatOpenAI-Z0eQY{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-Z0eQYœ}-CustomComponent-4vHeb{œfieldNameœ:œllmœ,œidœ:œCustomComponent-4vHebœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
            },
            {
                "source": "Input-WCesY",
                "sourceHandle": "{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-WCesYœ}",
                "target": "AzureAIDocumentIntelligenceLoader-6XOX1",
                "targetHandle": "{œfieldNameœ:œfile_pathœ,œidœ:œAzureAIDocumentIntelligenceLoader-6XOX1œ,œinputTypesœ:[œInputœ],œtypeœ:œfileœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "file_path",
                        "id": "AzureAIDocumentIntelligenceLoader-6XOX1",
                        "inputTypes": [
                            "Input"
                        ],
                        "type": "file"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Input"
                        ],
                        "dataType": "Input",
                        "id": "Input-WCesY"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-Input-WCesY{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-WCesYœ}-AzureAIDocumentIntelligenceLoader-6XOX1{œfieldNameœ:œfile_pathœ,œidœ:œAzureAIDocumentIntelligenceLoader-6XOX1œ,œinputTypesœ:[œInputœ],œtypeœ:œfileœ}"
            }
        ],
        "viewport": {
            "x": 512.1389688388344,
            "y": 547.1688536619714,
            "zoom": 0.2785263290020486
        }
    },
    "description": "Chat with your Car Manual . Ask queries related to your car, reads the scanned data and text from car manual.",
    "name": "Car Manual Bot",
    "flow_type": "chat"
}