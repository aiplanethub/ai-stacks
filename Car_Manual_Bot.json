{
    "id": "b11ece33-a366-458b-aa38-91f30071dd39",
    "data": {
        "nodes": [
            {
                "width": 384,
                "height": 502,
                "id": "RecursiveCharacterTextSplitter-VfzUK",
                "type": "genericNode",
                "position": {
                    "x": 601.9369267210237,
                    "y": -65.37507395599445
                },
                "data": {
                    "type": "RecursiveCharacterTextSplitter",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow import CustomComponent\nfrom langchain.schema import Document\nfrom genflow.utils.util import build_loader_repr_from_documents\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        self.repr_value = build_loader_repr_from_documents(docs)\n        return docs\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chunk_overlap": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 200,
                                "password": false,
                                "name": "chunk_overlap",
                                "display_name": "Chunk Overlap",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The amount of overlap between chunks.",
                                "type": "int",
                                "list": false
                            },
                            "chunk_size": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 1000,
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Chunk Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The maximum length of each chunk.",
                                "type": "int",
                                "list": false
                            },
                            "documents": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The documents to split.",
                                "type": "Document",
                                "list": true
                            },
                            "separators": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "separators",
                                "display_name": "Separators",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].",
                                "type": "str",
                                "list": true
                            }
                        },
                        "description": "Split text into chunks of a specified length.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "Recursive Character Text Splitter",
                        "custom_fields": {
                            "chunk_overlap": null,
                            "chunk_size": null,
                            "documents": null,
                            "separators": null
                        },
                        "output_types": [
                            "RecursiveCharacterTextSplitter"
                        ],
                        "documentation": "https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter",
                        "beta": true,
                        "error": null
                    },
                    "id": "RecursiveCharacterTextSplitter-VfzUK"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 601.9369267210237,
                    "y": -65.37507395599445
                },
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 502
                }
            },
            {
                "width": 384,
                "height": 564,
                "id": "PromptTemplate-U2Jfr",
                "type": "genericNode",
                "position": {
                    "x": 1223.3395330676794,
                    "y": -789.8033306382597
                },
                "data": {
                    "type": "PromptTemplate",
                    "node": {
                        "template": {
                            "output_parser": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "output_parser",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "BaseOutputParser",
                                "list": false
                            },
                            "input_types": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "input_types",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "input_variables": {
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "input_variables",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "str",
                                "list": true,
                                "value": [
                                    "context",
                                    "chat_history",
                                    "question"
                                ]
                            },
                            "partial_variables": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "partial_variables",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "template": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "password": false,
                                "name": "template",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "prompt",
                                "list": false,
                                "value": "You are an expert on car maintenance. You are a Car Manual come to life. Please provide detailed and accurate information about the query, covering steps, tips, and potential issues using the below context\nAssume the user has basic knowledge but needs expert guidance. If the request is outside the scope of the context you have, let the user know that you don't know the answer as it is not mentioned\nin the car manual. Do not make up answers that are not in the context.\n\nCONTEXT: {context}\n{chat_history}\n{question}"
                            },
                            "template_format": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": "f-string",
                                "password": false,
                                "name": "template_format",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "validate_template": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "validate_template",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "PromptTemplate",
                            "context": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "context",
                                "display_name": "context",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "question": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "question",
                                "display_name": "question",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "chat_history": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "chat_history",
                                "display_name": "chat_history",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "A prompt template for a language model.",
                        "base_classes": [
                            "BasePromptTemplate",
                            "PromptTemplate",
                            "StringPromptTemplate"
                        ],
                        "name": "",
                        "display_name": "PromptTemplate",
                        "documentation": "https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/",
                        "custom_fields": {
                            "": [
                                "context",
                                "chat_history",
                                "question"
                            ],
                            "template": [
                                "context",
                                "chat_history",
                                "question"
                            ]
                        },
                        "output_types": [],
                        "field_formatters": {},
                        "beta": false,
                        "error": null
                    },
                    "id": "PromptTemplate-U2Jfr"
                },
                "positionAbsolute": {
                    "x": 1223.3395330676794,
                    "y": -789.8033306382597
                },
                "selected": false,
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 564
                }
            },
            {
                "width": 384,
                "height": 630,
                "id": "ChatOpenAI-OHkuG",
                "type": "genericNode",
                "position": {
                    "x": 2041.7777305732843,
                    "y": -797.76165755759
                },
                "data": {
                    "type": "ChatOpenAI",
                    "node": {
                        "template": {
                            "callbacks": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "callbacks",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "langchain.callbacks.base.BaseCallbackHandler",
                                "list": true
                            },
                            "async_client": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "async_client",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Any",
                                "list": false
                            },
                            "cache": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "cache",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "client": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "client",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Any",
                                "list": false
                            },
                            "default_headers": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "default_headers",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "default_query": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "default_query",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "http_client": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "http_client",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Any",
                                "list": false
                            },
                            "max_retries": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": 2,
                                "password": false,
                                "name": "max_retries",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "max_tokens": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "max_tokens",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false,
                                "value": ""
                            },
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "model_kwargs": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "model_kwargs",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "model_name": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "gpt-4",
                                "password": false,
                                "options": [
                                    "gpt-4-1106-preview",
                                    "gpt-4",
                                    "gpt-4-32k",
                                    "gpt-3.5-turbo",
                                    "gpt-3.5-turbo-16k"
                                ],
                                "name": "model_name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "n": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": 1,
                                "password": false,
                                "name": "n",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "openai_api_base": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "openai_api_base",
                                "display_name": "OpenAI API Base",
                                "advanced": false,
                                "dynamic": false,
                                "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                                "type": "str",
                                "list": false
                            },
                            "openai_api_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": true,
                                "name": "openai_api_key",
                                "display_name": "OpenAI API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "openai_organization": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "openai_organization",
                                "display_name": "OpenAI Organization",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "openai_proxy": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "openai_proxy",
                                "display_name": "OpenAI Proxy",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "request_timeout": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "request_timeout",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "float",
                                "list": false
                            },
                            "streaming": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "streaming",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "tags": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "tags",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "temperature": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "0.3",
                                "password": false,
                                "name": "temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "float",
                                "list": false
                            },
                            "tiktoken_model_name": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "tiktoken_model_name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "verbose": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "verbose",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "ChatOpenAI"
                        },
                        "description": "`OpenAI` Chat large language models API.",
                        "base_classes": [
                            "BaseLanguageModel",
                            "ChatOpenAI",
                            "BaseChatModel",
                            "BaseLLM"
                        ],
                        "display_name": "ChatOpenAI",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://docs.aiplanet.com/components/large-language-models#chatopenai",
                        "beta": false,
                        "error": null
                    },
                    "id": "ChatOpenAI-OHkuG"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 2041.7777305732843,
                    "y": -797.76165755759
                },
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 630
                }
            },
            {
                "width": 384,
                "height": 458,
                "id": "Input-u7Kc8",
                "type": "genericNode",
                "position": {
                    "x": -823.6837080314572,
                    "y": -574.4040635312692
                },
                "data": {
                    "type": "Input",
                    "node": {
                        "template": {
                            "input_value": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "sample_car_manual.pdf",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input Value",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "file",
                                "list": false,
                                "file_path": "mnt/models/files/b11ece33-a366-458b-aa38-91f30071dd39/f0183cca4398c2c92fc42355ed0f3d135532c7bab081f861accc27f01e92b7bc.pdf"
                            },
                            "input_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "User Car Manual",
                                "password": false,
                                "name": "input_key",
                                "display_name": "Input Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "File",
                                "password": false,
                                "options": [
                                    "File",
                                    "Url",
                                    "Text"
                                ],
                                "name": "input_type",
                                "display_name": "Input Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "Input"
                        },
                        "description": "Input is used to specify the type of input.",
                        "base_classes": [
                            "Input"
                        ],
                        "display_name": "Input",
                        "custom_fields": {},
                        "output_types": [
                            "Input"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/inputs",
                        "beta": false,
                        "error": null
                    },
                    "id": "Input-u7Kc8"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -823.6837080314572,
                    "y": -574.4040635312692
                },
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 458
                }
            },
            {
                "width": 384,
                "height": 531,
                "id": "ConversationBufferMemory-kjGU7",
                "type": "genericNode",
                "position": {
                    "x": 1318.8412870867949,
                    "y": -140.67950382978606
                },
                "data": {
                    "type": "ConversationBufferMemory",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional, Union\nfrom langchain.memory.chat_memory import BaseMemory, BaseChatMemory\nfrom langchain.memory.buffer import ConversationBufferMemory\nfrom langchain.memory.chat_message_histories.postgres import PostgresChatMessageHistory\n\nfrom genflow import CustomComponent\n\n\nclass ConversationBufferMemoryComponent(CustomComponent):\n    display_name: str = \"ConversationBufferMemory\"\n    description: str = \"Buffer for storing conversation memory.\"\n    documentation: str = (\n        \"https://docs.aiplanet.com/components/memories#conversationbuffermemory\"\n    )\n    beta = False\n\n    def build_config(self):\n        return {\n            \"input_key\": {\n                \"display_name\": \"Input Key\",\n                \"required\": False,\n                \"value\": \"\",\n                \"info\": \"The variable to be used as Chat Input when more than one variable is available.\",\n            },\n            \"memory_key\": {\n                \"display_name\": \"Memory Key\",\n                \"required\": False,\n                \"value\": \"history\",\n            },\n            \"output_key\": {\n                \"display_name\": \"Output Key\",\n                \"required\": False,\n                \"value\": \"\",\n                \"info\": \"The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)\",\n            },\n            \"return_messages\": {\n                \"display_name\": \"Return Messages\",\n                \"field_type\": \"bool\",\n                \"required\": False,\n                \"value\": True,\n            },\n            \"session_id\": {\n                \"display_name\": \"Session ID\",\n                \"required\": False,\n                \"advanced\": True,\n                \"value\": \"genflow_memory_db\",\n            },\n            \"connection_string\": {\n                \"display_name\": \"Connection String\",\n                \"required\": False,\n                \"advanced\": True,\n                \"value\": \"\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        input_key: Optional[str] = \"\",\n        memory_key: Optional[str] = \"history\",\n        output_key: Optional[str] = \"\",\n        return_messages: Optional[bool] = True,\n        session_id: Optional[str] = \"genflow_memory_db\",\n        connection_string: Optional[str] = \"\",\n    ) -> Union[BaseMemory, BaseChatMemory]:\n        chat_memory = PostgresChatMessageHistory(\n            session_id=session_id, connection_string=connection_string\n        )\n\n        keys = {}\n\n        if input_key and input_key != \"\":\n            keys[\"input_key\"] = input_key\n\n        if output_key and output_key != \"\":\n            keys[\"output_key\"] = output_key\n\n        return ConversationBufferMemory(\n            chat_memory=chat_memory,\n            memory_key=memory_key,\n            return_messages=return_messages,\n            **keys\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "connection_string": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": false,
                                "name": "connection_string",
                                "display_name": "Connection String",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "question",
                                "password": false,
                                "name": "input_key",
                                "display_name": "Input Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The variable to be used as Chat Input when more than one variable is available.",
                                "type": "str",
                                "list": false
                            },
                            "memory_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "chat_history",
                                "password": false,
                                "name": "memory_key",
                                "display_name": "Memory Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "output_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "answer",
                                "password": false,
                                "name": "output_key",
                                "display_name": "Output Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                                "type": "str",
                                "list": false
                            },
                            "return_messages": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "return_messages",
                                "display_name": "Return Messages",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "session_id": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "genflow_memory_db",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Buffer for storing conversation memory.",
                        "base_classes": [
                            "BaseMemory",
                            "BaseChatMemory",
                            "BaseMemory"
                        ],
                        "display_name": "ConversationBufferMemory",
                        "custom_fields": {
                            "connection_string": null,
                            "input_key": null,
                            "memory_key": null,
                            "output_key": null,
                            "return_messages": null,
                            "session_id": null
                        },
                        "output_types": [
                            "ConversationBufferMemory"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/memories#conversationbuffermemory",
                        "beta": false,
                        "error": null
                    },
                    "id": "ConversationBufferMemory-kjGU7"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1318.8412870867949,
                    "y": -140.67950382978606
                },
                "dragging": false,
                "measured": {
                    "width": 384,
                    "height": 531
                }
            },
            {
                "id": "Weaviate-YONx1",
                "type": "genericNode",
                "position": {
                    "x": 1435.1759727339074,
                    "y": 562.453366477299
                },
                "data": {
                    "type": "Weaviate",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow import CustomComponent\n\nfrom langchain.vectorstores.weaviate import Weaviate\nfrom langchain.schema import Document\nfrom langchain.vectorstores.base import VectorStore\nfrom langchain.embeddings.base import Embeddings\nimport weaviate\n\n\nclass WeaviateComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Weaviate.\n    \"\"\"\n\n    display_name: str = \"Weaviate\"\n    description: str = \"Implementation of Vector Store using Weaviate\"\n    documentation = \"https://docs.aiplanet.com/components/vector-store#weaviate\"\n    beta: bool = True\n    version: str = \"1.1\"\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"url\": {\n                \"display_name\": \"Weaviate URL\",\n                \"advanced\": True,\n                \"required\": True,\n            },\n            \"api_key\": {\n                \"display_name\": \"API Key\",\n                \"required\": True,\n                \"advanced\": True,\n                \"password\": True,\n            },\n            \"index_name\": {\n                \"display_name\": \"Index Name\",\n                \"value\": \"genflow\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"text_key\": {\n                \"display_name\": \"Text Key\",\n                \"value\": \"text\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"search_by_text\": {\n                \"display_name\": \"Search By Text\",\n                \"value\": False,\n                \"required\": False,\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        url: str,\n        index_name: Optional[str] = \"genflow\",\n        api_key: Optional[str] = None,\n        text_key: str = \"text\",\n        embedding: Optional[Embeddings] = None,\n        documents: Optional[Document] = None,\n        search_by_text: bool = False,\n    ) -> VectorStore:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - url (str): The URL of the Weaviate instance.\n        - index_name (str): The name of the index.\n        - api_key (Optional[str]): The API key for Weaviate.\n        - text_key (str): The key to use for text in Weaviate.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - search_by_text (bool): Whether to search by text or by vector.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        if api_key:\n            auth_config = weaviate.AuthApiKey(api_key=api_key)\n            client = weaviate.Client(url=url, auth_client_secret=auth_config)\n        else:\n            client = weaviate.Client(url=url)\n\n        if documents is not None and embedding is not None:\n            for doc in documents:\n                doc.metadata = {k: v for k, v in doc.metadata.items() if bool(k)}\n\n            return Weaviate.from_documents(\n                documents=documents,\n                embedding=embedding,\n                client=client,\n                index_name=index_name,\n                text_key=text_key,\n            )\n\n        if embedding is not None:\n            return Weaviate(\n                client=client,\n                index_name=index_name,\n                text_key=text_key,\n                embedding=embedding,\n                by_text=search_by_text,\n            )\n\n        return Weaviate(\n            client=client,\n            index_name=index_name,\n            text_key=text_key,\n            by_text=search_by_text,\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "url": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "url",
                                "display_name": "Weaviate URL",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "index_name": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "genflow",
                                "password": false,
                                "name": "index_name",
                                "display_name": "Index Name",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "api_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "api_key",
                                "display_name": "API Key",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false,
                                "value": ""
                            },
                            "text_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "text",
                                "password": false,
                                "name": "text_key",
                                "display_name": "Text Key",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "embedding": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "embedding",
                                "display_name": "Embedding",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "Embeddings",
                                "list": false
                            },
                            "documents": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "Document",
                                "list": true
                            },
                            "search_by_text": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "search_by_text",
                                "display_name": "Search By Text",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "bool",
                                "list": false
                            }
                        },
                        "description": "Implementation of Vector Store using Weaviate",
                        "base_classes": [
                            "VectorStore"
                        ],
                        "display_name": "Weaviate",
                        "custom_fields": {
                            "url": null,
                            "index_name": null,
                            "api_key": null,
                            "text_key": null,
                            "embedding": null,
                            "documents": null,
                            "search_by_text": null
                        },
                        "output_types": [
                            "Weaviate"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/vector-store#weaviate",
                        "beta": true,
                        "error": null,
                        "version": "1.1"
                    },
                    "id": "Weaviate-YONx1"
                },
                "measured": {
                    "width": 384,
                    "height": 291
                },
                "selected": false,
                "dragging": false
            },
            {
                "id": "VectorStoreRetriever-I4mtv",
                "type": "genericNode",
                "position": {
                    "x": 1995,
                    "y": 465
                },
                "data": {
                    "type": "VectorStoreRetriever",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from genflow import CustomComponent\nfrom genflow.field_typing import VectorStore, BaseRetriever\n\n\nclass VectorStoreRetrieverComponent(CustomComponent):\n    display_name: str = \"VectorStoreRetriever\"\n    description: str = \"VectorStore retriever\"\n    beta = False\n    version: str = \"1.0\"\n\n    def build_config(self):\n        return {\n            \"vector_store\": {\n                \"display_name\": \"VectorStore\",\n                \"field_type\": \"VectorStore\",\n            },\n            \"search_type\": {\n                \"display_name\": \"Search Type\",\n                \"value\": \"similarity\",\n                \"options\": [\"similarity\", \"mmr\"],\n            },\n            \"search_kwargs\": {\n                \"display_name\": \"Search Kwargs\",\n                \"field_type\": \"dict\",\n                \"value\": [{\"k\": 4}],\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        search_type: str,\n        search_kwargs: dict,\n        vector_store: VectorStore,\n    ) -> BaseRetriever:\n        return vector_store.as_retriever(\n            search_type=search_type, search_kwargs=search_kwargs\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "search_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "similarity",
                                "password": false,
                                "options": [
                                    "similarity",
                                    "mmr"
                                ],
                                "name": "search_type",
                                "display_name": "Search Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": true
                            },
                            "search_kwargs": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": [
                                    {
                                        "k": 4
                                    }
                                ],
                                "password": false,
                                "name": "search_kwargs",
                                "display_name": "Search Kwargs",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "dict",
                                "list": false
                            },
                            "vector_store": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "vector_store",
                                "display_name": "VectorStore",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "VectorStore",
                                "list": false
                            }
                        },
                        "description": "VectorStore retriever",
                        "base_classes": [
                            "BaseRetriever"
                        ],
                        "display_name": "VectorStoreRetriever",
                        "custom_fields": {
                            "search_type": null,
                            "search_kwargs": null,
                            "vector_store": null
                        },
                        "output_types": [
                            "VectorStoreRetriever"
                        ],
                        "documentation": "",
                        "beta": false,
                        "error": null,
                        "version": "1.0"
                    },
                    "id": "VectorStoreRetriever-I4mtv"
                },
                "measured": {
                    "width": 384,
                    "height": 419
                }
            },
            {
                "id": "ConversationalRetrievalChain-OXdXB",
                "type": "genericNode",
                "position": {
                    "x": 2535,
                    "y": -75
                },
                "data": {
                    "type": "ConversationalRetrievalChain",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional, Union, Callable\nfrom genflow import CustomComponent\nfrom genflow.field_typing import (\n    BasePromptTemplate,\n    BaseLanguageModel,\n    BaseMemory,\n    Chain,\n    BaseRetriever,\n)\nfrom langchain.chains import ConversationalRetrievalChain\nfrom langchain.prompts import PromptTemplate\n\n\nclass ConversationalRetrievalChainComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a RetrievalQA using Prompt.\n    \"\"\"\n\n    display_name: str = \"ConversationalRetrievalChain\"\n    description: str = \"Implementation of ConversationalRetrievalChain: allows Memory, Custom Prompt, Retriever\"\n    documentation: str = (\n        \"https://docs.aiplanet.com/components/chains#conversationalretrievalchain\"\n    )\n    beta: bool = True\n    version: str = \"1.0\"\n\n    CHAIN_TYPE_OPTIONS = [\"stuff\", \"map_reduce\", \"refine\", \"map_rerank\"]\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"chain_type\": {\n                \"display\": \"chain_type\",\n                \"value\": \"stuff\",\n                \"options\": self.CHAIN_TYPE_OPTIONS,\n                \"required\": True,\n            },\n            \"llm\": {\"display_name\": \"LLM\", \"required\": True},\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"retriever\": {\"display_name\": \"Retriever\", \"required\": True},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        llm: BaseLanguageModel,\n        retriever: BaseRetriever,\n        prompt: Optional[BasePromptTemplate] = None,\n        chain_type: str = \"stuff\",\n        memory: BaseMemory = None,\n    ) -> Chain:\n        \"\"\"\n        Builds the RetrievalQA with prompt\n\n        Args:\n        - llm: Large Language Models\n        - chain_type: used to load a specific type of chain for question-answering\n        - chain_type_kwargs: chain keywords argument to pass prompt\n        - retriever: vector store to retrieve k relevant context information\n        - memory: memory to provide chat_history for object\n\n        Returns:\n        - Chain: The ConversationalRetrievalChain.from_llm\n        \"\"\"\n\n        DEFAULT_TEMPLATE = \"\"\"\n            Answer the question based on the chat history(delimited by <hs></hs>) and context(delimited by <ctx> </ctx>) below.\n            -----------\n            <ctx>\n            {context}\n            </ctx>\n            -----------\n            <hs>\n            {chat_history}\n            </hs>\n            -----------\n            Question: {question}\n            Answer:\n        \"\"\"\n\n        DEFAULT_PROMPT = PromptTemplate(\n            input_variables=[\"context\", \"question\", \"chat_history\"],\n            template=DEFAULT_TEMPLATE,\n        )\n\n        if prompt == None:\n            prompt = DEFAULT_PROMPT\n\n        return ConversationalRetrievalChain.from_llm(\n            llm=llm,\n            retriever=retriever,\n            chain_type=chain_type,\n            return_source_documents=True,\n            verbose=False,\n            combine_docs_chain_kwargs={\"prompt\": prompt},\n            memory=memory,\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "llm": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "llm",
                                "display_name": "LLM",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "BaseLanguageModel",
                                "list": false
                            },
                            "retriever": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "retriever",
                                "display_name": "Retriever",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "BaseRetriever",
                                "list": false
                            },
                            "prompt": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "prompt",
                                "display_name": "Prompt",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "BasePromptTemplate",
                                "list": false
                            },
                            "chain_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "stuff",
                                "password": false,
                                "options": [
                                    "stuff",
                                    "map_reduce",
                                    "refine",
                                    "map_rerank"
                                ],
                                "name": "chain_type",
                                "display_name": "chain_type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": true
                            },
                            "memory": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "memory",
                                "display_name": "Memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "BaseMemory",
                                "list": false
                            }
                        },
                        "description": "Implementation of ConversationalRetrievalChain: allows Memory, Custom Prompt, Retriever",
                        "base_classes": [
                            "Chain"
                        ],
                        "display_name": "ConversationalRetrievalChain",
                        "custom_fields": {
                            "llm": null,
                            "retriever": null,
                            "prompt": null,
                            "chain_type": null,
                            "memory": null
                        },
                        "output_types": [
                            "ConversationalRetrievalChain"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/chains#conversationalretrievalchain",
                        "beta": true,
                        "error": null,
                        "version": "1.0"
                    },
                    "id": "ConversationalRetrievalChain-OXdXB"
                },
                "measured": {
                    "width": 384,
                    "height": 497
                },
                "selected": false
            },
            {
                "id": "HuggingFaceEmbeddingInferenceAPI-raFIu",
                "type": "genericNode",
                "position": {
                    "x": 825,
                    "y": 645
                },
                "data": {
                    "type": "HuggingFaceEmbeddingInferenceAPI",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from genflow import CustomComponent\nfrom langchain.embeddings.base import Embeddings\nfrom langchain.embeddings import HuggingFaceInferenceAPIEmbeddings\n\n\nclass HuggingFaceInferenceAPIEmbeddingsComponent(CustomComponent):\n    display_name: str = \"HuggingFaceInferenceAPI Embeddings\"\n    description: str = \"\"\"Access HuggingFaceEmbedding model via inference api,download models locally.\"\"\"\n    documentation: str = \"https://docs.aiplanet.com/components/embeddings#huggingface-inference-api-embeddings\"\n    beta = False\n    version: str = \"1.0\"\n\n    def build_config(self):\n        return {\n            \"inference_api_key\": {\n                \"display_name\": \"Inference API Key\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n                \"password\": True,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(self, inference_api_key: str, model_name: str) -> Embeddings:\n        return HuggingFaceInferenceAPIEmbeddings(\n            api_key=inference_api_key, model_name=model_name\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "inference_api_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": true,
                                "name": "inference_api_key",
                                "display_name": "Inference API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "model_name": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": false,
                                "name": "model_name",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Access HuggingFaceEmbedding model via inference api,download models locally.",
                        "base_classes": [
                            "Embeddings"
                        ],
                        "display_name": "HuggingFaceInferenceAPI Embeddings",
                        "custom_fields": {
                            "inference_api_key": null,
                            "model_name": null
                        },
                        "output_types": [
                            "HuggingFaceEmbeddingInferenceAPI"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/embeddings#huggingface-inference-api-embeddings",
                        "beta": false,
                        "error": null,
                        "version": "1.0"
                    },
                    "id": "HuggingFaceEmbeddingInferenceAPI-raFIu"
                },
                "measured": {
                    "width": 384,
                    "height": 403
                },
                "selected": false
            },
            {
                "id": "AzureAIDocumentIntelligenceLoader-Kuqbb",
                "type": "genericNode",
                "position": {
                    "x": -132.3215812763953,
                    "y": -218.8383542139887
                },
                "data": {
                    "type": "AzureAIDocumentIntelligenceLoader",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import List\nfrom genflow.interface.custom.custom_component import CustomComponent\nfrom genflow.utils.util import build_loader_repr_from_documents\nfrom langchain_community.document_loaders import AzureAIDocumentIntelligenceLoader\nfrom langchain.schema import Document\n\n\nclass AzureAIDocumentIntelligenceLoaderComponent(CustomComponent):\n    display_name: str = \"AzureAIDocumentIntelligenceLoader\"\n    description: str = \"Azure ai document intelligence Loader.\"\n    documentation: str = \"https://docs.aiplanet.com/components/document-loaders#azureai-document-intelligence-loader\"\n    version: str = \"2.0\"\n\n    def build_config(self):\n        return {\n            \"file_path\": {\n                \"display_name\": \"File Path\",\n                \"required\": True,\n                \"field_type\": \"file\",\n                \"file_types\": [\"pdf\", \"jpeg\", \"png\", \"bmp\", \"tiff\"],\n                \"suffixes\": [\n                    \".pdf\",\n                    \".jpg\",\n                    \".jpeg\",\n                    \".png\",\n                    \".bmp\",\n                    \".dib\" \".tiff\",\n                    \".tif\",\n                ],\n                \"input_types\": [\"Input\"],\n            },\n            \"endpoint\": {\"display_name\": \"Endpoint\", \"required\": True, \"password\":True},\n            \"key\": {\"display_name\": \"Key\", \"required\": True, \"password\": True},\n            \"api_model\": {\n                \"display_name\": \"API Model\",\n                \"required\": True,\n                \"value\": \"prebuilt-layout\",\n            },\n            \"code\": {\"show\": False},\n            \"file_size\": {\n                \"display_name\": \"File Size\",\n                \"required\": True,\n                \"advanced\": True,\n                \"field_type\": \"int\",\n                \"value\": 20,\n            },\n        }\n\n    def build(\n        self, file_path: str, endpoint: str, key: str, api_model: str, file_size: int\n    ) -> List[Document]:\n        loader = AzureAIDocumentIntelligenceLoader(\n            api_endpoint=endpoint, api_key=key, file_path=file_path, api_model=api_model\n        )\n        documents = loader.load()\n        self.repr_value = build_loader_repr_from_documents(documents)\n        return documents\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "file_path": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "suffixes": [
                                    ".pdf",
                                    ".jpg",
                                    ".jpeg",
                                    ".png",
                                    ".bmp",
                                    ".dib.tiff",
                                    ".tif"
                                ],
                                "password": false,
                                "name": "file_path",
                                "display_name": "File Path",
                                "advanced": false,
                                "input_types": [
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "file",
                                "list": false,
                                "fileTypes": [
                                    "pdf",
                                    "jpeg",
                                    "png",
                                    "bmp",
                                    "tiff"
                                ],
                                "file_path": null,
                                "value": ""
                            },
                            "endpoint": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "endpoint",
                                "display_name": "Endpoint",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false,
                                "value": ""
                            },
                            "key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "key",
                                "display_name": "Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false,
                                "value": ""
                            },
                            "api_model": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "prebuilt-layout",
                                "password": false,
                                "name": "api_model",
                                "display_name": "API Model",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "str",
                                "list": false
                            },
                            "file_size": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 20,
                                "password": false,
                                "name": "file_size",
                                "display_name": "File Size",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "use_default": false,
                                "type": "int",
                                "list": false
                            }
                        },
                        "description": "Azure ai document intelligence Loader.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "AzureAIDocumentIntelligenceLoader",
                        "custom_fields": {
                            "file_path": null,
                            "endpoint": null,
                            "key": null,
                            "api_model": null,
                            "file_size": null
                        },
                        "output_types": [
                            "AzureAIDocumentIntelligenceLoader"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/document-loaders#azureai-document-intelligence-loader",
                        "beta": true,
                        "error": null,
                        "version": "2.0"
                    },
                    "id": "AzureAIDocumentIntelligenceLoader-Kuqbb"
                },
                "measured": {
                    "width": 384,
                    "height": 571
                },
                "selected": false,
                "dragging": false
            }
        ],
        "edges": [
            {
                "source": "RecursiveCharacterTextSplitter-VfzUK",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-VfzUKœ}",
                "target": "Weaviate-YONx1",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œWeaviate-YONx1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "Weaviate-YONx1",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "RecursiveCharacterTextSplitter",
                        "id": "RecursiveCharacterTextSplitter-VfzUK"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "xy-edge__RecursiveCharacterTextSplitter-VfzUK{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-VfzUKœ}-Weaviate-YONx1{œfieldNameœ:œdocumentsœ,œidœ:œWeaviate-YONx1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "Weaviate-YONx1",
                "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ],œdataTypeœ:œWeaviateœ,œidœ:œWeaviate-YONx1œ}",
                "target": "VectorStoreRetriever-I4mtv",
                "targetHandle": "{œfieldNameœ:œvector_storeœ,œidœ:œVectorStoreRetriever-I4mtvœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "vector_store",
                        "id": "VectorStoreRetriever-I4mtv",
                        "inputTypes": null,
                        "type": "VectorStore"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "VectorStore"
                        ],
                        "dataType": "Weaviate",
                        "id": "Weaviate-YONx1"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__Weaviate-YONx1{œbaseClassesœ:[œVectorStoreœ],œdataTypeœ:œWeaviateœ,œidœ:œWeaviate-YONx1œ}-VectorStoreRetriever-I4mtv{œfieldNameœ:œvector_storeœ,œidœ:œVectorStoreRetriever-I4mtvœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}"
            },
            {
                "source": "PromptTemplate-U2Jfr",
                "sourceHandle": "{œbaseClassesœ:[œBasePromptTemplateœ,œPromptTemplateœ,œStringPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-U2Jfrœ}",
                "target": "ConversationalRetrievalChain-OXdXB",
                "targetHandle": "{œfieldNameœ:œpromptœ,œidœ:œConversationalRetrievalChain-OXdXBœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "prompt",
                        "id": "ConversationalRetrievalChain-OXdXB",
                        "inputTypes": null,
                        "type": "BasePromptTemplate"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BasePromptTemplate",
                            "PromptTemplate",
                            "StringPromptTemplate"
                        ],
                        "dataType": "PromptTemplate",
                        "id": "PromptTemplate-U2Jfr"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__PromptTemplate-U2Jfr{œbaseClassesœ:[œBasePromptTemplateœ,œPromptTemplateœ,œStringPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-U2Jfrœ}-ConversationalRetrievalChain-OXdXB{œfieldNameœ:œpromptœ,œidœ:œConversationalRetrievalChain-OXdXBœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"
            },
            {
                "source": "ChatOpenAI-OHkuG",
                "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-OHkuGœ}",
                "target": "ConversationalRetrievalChain-OXdXB",
                "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œConversationalRetrievalChain-OXdXBœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "llm",
                        "id": "ConversationalRetrievalChain-OXdXB",
                        "inputTypes": null,
                        "type": "BaseLanguageModel"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseLanguageModel",
                            "ChatOpenAI",
                            "BaseChatModel",
                            "BaseLLM"
                        ],
                        "dataType": "ChatOpenAI",
                        "id": "ChatOpenAI-OHkuG"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__ChatOpenAI-OHkuG{œbaseClassesœ:[œBaseLanguageModelœ,œChatOpenAIœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-OHkuGœ}-ConversationalRetrievalChain-OXdXB{œfieldNameœ:œllmœ,œidœ:œConversationalRetrievalChain-OXdXBœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
            },
            {
                "source": "ConversationBufferMemory-kjGU7",
                "sourceHandle": "{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œBaseMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-kjGU7œ}",
                "target": "ConversationalRetrievalChain-OXdXB",
                "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œConversationalRetrievalChain-OXdXBœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "memory",
                        "id": "ConversationalRetrievalChain-OXdXB",
                        "inputTypes": null,
                        "type": "BaseMemory"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseMemory",
                            "BaseChatMemory",
                            "BaseMemory"
                        ],
                        "dataType": "ConversationBufferMemory",
                        "id": "ConversationBufferMemory-kjGU7"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__ConversationBufferMemory-kjGU7{œbaseClassesœ:[œBaseMemoryœ,œBaseChatMemoryœ,œBaseMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-kjGU7œ}-ConversationalRetrievalChain-OXdXB{œfieldNameœ:œmemoryœ,œidœ:œConversationalRetrievalChain-OXdXBœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}"
            },
            {
                "source": "VectorStoreRetriever-I4mtv",
                "sourceHandle": "{œbaseClassesœ:[œBaseRetrieverœ],œdataTypeœ:œVectorStoreRetrieverœ,œidœ:œVectorStoreRetriever-I4mtvœ}",
                "target": "ConversationalRetrievalChain-OXdXB",
                "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œConversationalRetrievalChain-OXdXBœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "retriever",
                        "id": "ConversationalRetrievalChain-OXdXB",
                        "inputTypes": null,
                        "type": "BaseRetriever"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseRetriever"
                        ],
                        "dataType": "VectorStoreRetriever",
                        "id": "VectorStoreRetriever-I4mtv"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__VectorStoreRetriever-I4mtv{œbaseClassesœ:[œBaseRetrieverœ],œdataTypeœ:œVectorStoreRetrieverœ,œidœ:œVectorStoreRetriever-I4mtvœ}-ConversationalRetrievalChain-OXdXB{œfieldNameœ:œretrieverœ,œidœ:œConversationalRetrievalChain-OXdXBœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}"
            },
            {
                "source": "HuggingFaceEmbeddingInferenceAPI-raFIu",
                "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-raFIuœ}",
                "target": "Weaviate-YONx1",
                "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œWeaviate-YONx1œ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "embedding",
                        "id": "Weaviate-YONx1",
                        "inputTypes": null,
                        "type": "Embeddings"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Embeddings"
                        ],
                        "dataType": "HuggingFaceEmbeddingInferenceAPI",
                        "id": "HuggingFaceEmbeddingInferenceAPI-raFIu"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__HuggingFaceEmbeddingInferenceAPI-raFIu{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-raFIuœ}-Weaviate-YONx1{œfieldNameœ:œembeddingœ,œidœ:œWeaviate-YONx1œ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
            },
            {
                "source": "Input-u7Kc8",
                "sourceHandle": "{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-u7Kc8œ}",
                "target": "AzureAIDocumentIntelligenceLoader-Kuqbb",
                "targetHandle": "{œfieldNameœ:œfile_pathœ,œidœ:œAzureAIDocumentIntelligenceLoader-Kuqbbœ,œinputTypesœ:[œInputœ],œtypeœ:œfileœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "file_path",
                        "id": "AzureAIDocumentIntelligenceLoader-Kuqbb",
                        "inputTypes": [
                            "Input"
                        ],
                        "type": "file"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Input"
                        ],
                        "dataType": "Input",
                        "id": "Input-u7Kc8"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__Input-u7Kc8{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-u7Kc8œ}-AzureAIDocumentIntelligenceLoader-Kuqbb{œfieldNameœ:œfile_pathœ,œidœ:œAzureAIDocumentIntelligenceLoader-Kuqbbœ,œinputTypesœ:[œInputœ],œtypeœ:œfileœ}"
            },
            {
                "source": "AzureAIDocumentIntelligenceLoader-Kuqbb",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œAzureAIDocumentIntelligenceLoaderœ,œidœ:œAzureAIDocumentIntelligenceLoader-Kuqbbœ}",
                "target": "RecursiveCharacterTextSplitter-VfzUK",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-VfzUKœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "RecursiveCharacterTextSplitter-VfzUK",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "AzureAIDocumentIntelligenceLoader",
                        "id": "AzureAIDocumentIntelligenceLoader-Kuqbb"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground  stroke-connection",
                "animated": false,
                "id": "xy-edge__AzureAIDocumentIntelligenceLoader-Kuqbb{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œAzureAIDocumentIntelligenceLoaderœ,œidœ:œAzureAIDocumentIntelligenceLoader-Kuqbbœ}-RecursiveCharacterTextSplitter-VfzUK{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-VfzUKœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            }
        ],
        "viewport": {
            "x": 348.44685339764715,
            "y": 215.91965542169282,
            "zoom": 0.514943541041019
        }
    },
    "description": "Chat with your Car Manual . Ask queries related to your car, reads the scanned data and text from car manual.",
    "name": "Car Manual Bot",
    "flow_type": "chat"
}