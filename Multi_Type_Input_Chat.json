{
    "id": "6e27416e-abeb-44cf-8679-ddb30bfb243a",
    "data": {
        "nodes": [
            {
                "width": 384,
                "height": 630,
                "id": "ChatOpenAI-BQzsg",
                "type": "genericNode",
                "position": {
                    "x": 756.0497510222895,
                    "y": -660.4898555896108
                },
                "data": {
                    "type": "ChatOpenAI",
                    "node": {
                        "template": {
                            "callbacks": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "callbacks",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "langchain.callbacks.base.BaseCallbackHandler",
                                "list": true
                            },
                            "async_client": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "async_client",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Any",
                                "list": false
                            },
                            "cache": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "cache",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "client": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "client",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Any",
                                "list": false
                            },
                            "default_headers": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "default_headers",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "default_query": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "default_query",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "http_client": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "http_client",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Any",
                                "list": false
                            },
                            "max_retries": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": 2,
                                "password": false,
                                "name": "max_retries",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "max_tokens": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": true,
                                "name": "max_tokens",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false,
                                "value": ""
                            },
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "model_kwargs": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "model_kwargs",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "model_name": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "gpt-3.5-turbo",
                                "password": false,
                                "options": [
                                    "gpt-4-1106-preview",
                                    "gpt-4",
                                    "gpt-4-32k",
                                    "gpt-3.5-turbo",
                                    "gpt-3.5-turbo-16k"
                                ],
                                "name": "model_name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "n": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": 1,
                                "password": false,
                                "name": "n",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "openai_api_base": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "openai_api_base",
                                "display_name": "OpenAI API Base",
                                "advanced": false,
                                "dynamic": false,
                                "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                                "type": "str",
                                "list": false,
                                "value": ""
                            },
                            "openai_api_key": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": true,
                                "name": "openai_api_key",
                                "display_name": "OpenAI API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "openai_organization": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "openai_organization",
                                "display_name": "OpenAI Organization",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "openai_proxy": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "openai_proxy",
                                "display_name": "OpenAI Proxy",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "request_timeout": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "request_timeout",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "float",
                                "list": false
                            },
                            "streaming": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "streaming",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "tags": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "tags",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "temperature": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "0.3",
                                "password": false,
                                "name": "temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "float",
                                "list": false
                            },
                            "tiktoken_model_name": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "tiktoken_model_name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "verbose": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "verbose",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "ChatOpenAI"
                        },
                        "description": "`OpenAI` Chat large language models API.",
                        "base_classes": [
                            "ChatOpenAI",
                            "BaseLanguageModel",
                            "BaseChatModel",
                            "BaseLLM"
                        ],
                        "display_name": "ChatOpenAI",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
                        "beta": false,
                        "error": null
                    },
                    "id": "ChatOpenAI-BQzsg"
                },
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": 756.0497510222895,
                    "y": -660.4898555896108
                }
            },
            {
                "width": 384,
                "height": 333,
                "id": "CombineDocsChain-NPOQR",
                "type": "genericNode",
                "position": {
                    "x": 1218.3846833717137,
                    "y": -348.2804505775313
                },
                "data": {
                    "type": "CombineDocsChain",
                    "node": {
                        "template": {
                            "llm": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "llm",
                                "display_name": "LLM",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseLanguageModel",
                                "list": false
                            },
                            "chain_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "stuff",
                                "password": false,
                                "options": [
                                    "stuff",
                                    "map_reduce",
                                    "map_rerank",
                                    "refine"
                                ],
                                "name": "chain_type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "_type": "load_qa_chain"
                        },
                        "description": "Load question answering chain.",
                        "base_classes": [
                            "BaseCombineDocumentsChain",
                            "Callable"
                        ],
                        "display_name": "CombineDocsChain",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "",
                        "beta": false,
                        "error": null
                    },
                    "id": "CombineDocsChain-NPOQR"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1218.3846833717137,
                    "y": -348.2804505775313
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 408,
                "id": "HuggingFaceEmbeddingInferenceAPI-Xb3wk",
                "type": "genericNode",
                "position": {
                    "x": 184.11368969846797,
                    "y": 1281.4149808930797
                },
                "data": {
                    "type": "HuggingFaceEmbeddingInferenceAPI",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from genflow import CustomComponent\nfrom langchain.embeddings.base import Embeddings\nfrom langchain.embeddings import HuggingFaceInferenceAPIEmbeddings\n\n\nclass HuggingFaceInferenceAPIEmbeddingsComponent(CustomComponent):\n    display_name: str = \"HuggingFaceInferenceAPI Embeddings\"\n    description: str = \"\"\"Access HuggingFaceEmbedding model via inference api, \nwhich does not require to install sentence_transformers \nand download models locally.\"\"\"\n    documentation: str = (\n        \"https://python.langchain.com/docs/integrations/text_embedding/huggingfacehub\"\n    )\n    beta = False\n\n    def build_config(self):\n        return {\n            \"inference_api_key\": {\n                \"display_name\": \"Inference API Key\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(self, inference_api_key: str, model_name: str) -> Embeddings:\n        return HuggingFaceInferenceAPIEmbeddings(\n            api_key=inference_api_key, model_name=model_name\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "inference_api_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "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",
                                "password": false,
                                "name": "inference_api_key",
                                "display_name": "Inference API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "model_name": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "BAAI/bge-small-en-v1.5",
                                "password": false,
                                "name": "model_name",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Access HuggingFaceEmbedding model via inference api, \nwhich does not require to install sentence_transformers \nand download models locally.",
                        "base_classes": [
                            "Embeddings"
                        ],
                        "display_name": "HuggingFaceInferenceAPI Embeddings",
                        "custom_fields": {
                            "inference_api_key": null,
                            "model_name": null
                        },
                        "output_types": [
                            "HuggingFaceEmbeddingInferenceAPI"
                        ],
                        "documentation": "https://python.langchain.com/docs/integrations/text_embedding/huggingfacehub",
                        "beta": false,
                        "error": null
                    },
                    "id": "HuggingFaceEmbeddingInferenceAPI-Xb3wk"
                },
                "positionAbsolute": {
                    "x": 184.11368969846797,
                    "y": 1281.4149808930797
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 339,
                "id": "RetrievalQA-rq1GF",
                "type": "genericNode",
                "position": {
                    "x": 1641.690615569596,
                    "y": -133.58717757485283
                },
                "data": {
                    "type": "RetrievalQA",
                    "node": {
                        "template": {
                            "callbacks": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "callbacks",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "langchain.callbacks.base.BaseCallbackHandler",
                                "list": true
                            },
                            "combine_documents_chain": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "combine_documents_chain",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseCombineDocumentsChain",
                                "list": false
                            },
                            "memory": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "memory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseMemory",
                                "list": false
                            },
                            "retriever": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "retriever",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "BaseRetriever",
                                "list": false
                            },
                            "input_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "query",
                                "password": false,
                                "name": "input_key",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "output_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "result",
                                "password": false,
                                "name": "output_key",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "return_source_documents": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "password": false,
                                "name": "return_source_documents",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "tags": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "tags",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": true
                            },
                            "verbose": {
                                "required": false,
                                "placeholder": "",
                                "show": false,
                                "multiline": false,
                                "password": false,
                                "name": "verbose",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "_type": "RetrievalQA"
                        },
                        "description": "Chain for question-answering against an index.",
                        "base_classes": [
                            "RetrievalQA",
                            "BaseRetrievalQA",
                            "Chain",
                            "Callable"
                        ],
                        "display_name": "RetrievalQA",
                        "custom_fields": {},
                        "output_types": [],
                        "documentation": "https://python.langchain.com/docs/modules/chains/popular/vector_db_qa",
                        "beta": false,
                        "error": null
                    },
                    "id": "RetrievalQA-rq1GF"
                },
                "positionAbsolute": {
                    "x": 1641.690615569596,
                    "y": -133.58717757485283
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 376,
                "id": "PyPDFLoader-FgNuU",
                "type": "genericNode",
                "position": {
                    "x": -312.35583610591294,
                    "y": -259.3514394203207
                },
                "data": {
                    "type": "PyPDFLoader",
                    "node": {
                        "template": {
                            "file_path": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "suffixes": [
                                    ".pdf"
                                ],
                                "password": false,
                                "name": "file_path",
                                "advanced": false,
                                "input_types": [
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "file",
                                "list": false,
                                "fileTypes": [
                                    "pdf"
                                ],
                                "file_path": "/mnt/models/files/14e9e768-2b0b-4268-9ac9-1b9908d0c4a4/eede915e3696780006dc6343f2a508de1e7cdbd15aeb6d5466e4c6cf1ea09106.pdf"
                            },
                            "file_size": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 20,
                                "password": false,
                                "name": "file_size",
                                "display_name": "Fize Size",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": [
                                    {
                                        "": ""
                                    }
                                ],
                                "password": false,
                                "name": "metadata",
                                "display_name": "Metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "_type": "PyPDFLoader"
                        },
                        "description": "Load PDF using pypdf into list of documents.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "PyPDFLoader",
                        "custom_fields": {},
                        "output_types": [
                            "Document"
                        ],
                        "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/how_to/pdf",
                        "beta": false,
                        "error": null
                    },
                    "id": "PyPDFLoader-FgNuU"
                },
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": -312.35583610591294,
                    "y": -259.3514394203207
                }
            },
            {
                "width": 384,
                "height": 396,
                "id": "WebBaseLoader-4Y2XI",
                "type": "genericNode",
                "position": {
                    "x": -320.7330997956069,
                    "y": 96.07662153835531
                },
                "data": {
                    "type": "WebBaseLoader",
                    "node": {
                        "template": {
                            "metadata": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": [
                                    {
                                        "": ""
                                    }
                                ],
                                "password": false,
                                "name": "metadata",
                                "display_name": "Metadata",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "dict",
                                "list": false
                            },
                            "web_path": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": false,
                                "name": "web_path",
                                "display_name": "Web Page",
                                "advanced": false,
                                "input_types": [
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "WebBaseLoader"
                        },
                        "description": "Load HTML pages using `urllib` and parse them with `BeautifulSoup'.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "WebBaseLoader",
                        "custom_fields": {},
                        "output_types": [
                            "Document"
                        ],
                        "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/integrations/web_base",
                        "beta": false,
                        "error": null
                    },
                    "id": "WebBaseLoader-4Y2XI"
                },
                "positionAbsolute": {
                    "x": -320.7330997956069,
                    "y": 96.07662153835531
                },
                "selected": false,
                "dragging": false
            },
            {
                "width": 384,
                "height": 396,
                "id": "YoutubeLoader-A8cKE",
                "type": "genericNode",
                "position": {
                    "x": -344.2232976982365,
                    "y": 509.7090471475826
                },
                "data": {
                    "type": "YoutubeLoader",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import List\nfrom genflow import CustomComponent\nfrom langchain.document_loaders import YoutubeLoader\nfrom langchain.schema import Document\n\n\nclass YoutubeLoaderComponent(CustomComponent):\n    display_name: str = \"Youtube Loader\"\n    description: str = \"Downloads the YouTube transcripts and video information.\"\n    documentation: str = (\n        \"https://python.langchain.com/docs/integrations/providers/youtube\"\n    )\n    beta = False\n\n    def build_config(self):\n        return {\n            \"youtube_url\": {\n                \"display_name\": \"Video URL\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"\",\n                \"input_types\":[\"Input\"]\n            },\n            \"language\": {\n                \"display_name\": \"Language\",\n                \"is_list\": False,\n                \"required\": True,\n                \"value\": \"en\",\n                \"info\": \"language code to extract transcript. please check subtitles/cc to know available transcripts.\",\n            },\n            \"code\": {\"show\": False},\n            # error : <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify\n            # failed: unable to get local issuer certificate (_ssl.c:1007)>\n            # \"add_video_info\": {\n            #     \"display_name\": \"Add Video Information\",\n            #     \"is_list\": False,\n            #     \"required\": False,\n            #     \"value\": False,\n            # },\n            # translation not working\n            # \"translation\": {\n            #     \"display_name\": \"Translation\",\n            #     \"is_list\": False,\n            #     \"required\": True,\n            #     \"value\": \"en\",\n            # },\n        }\n\n    def build(self, youtube_url: str, language: str) -> List[Document]:\n        loader_instance = YoutubeLoader.from_youtube_url(\n            youtube_url=youtube_url, add_video_info=False, language=language\n        )\n        return loader_instance.load()\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "language": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "en",
                                "password": false,
                                "name": "language",
                                "display_name": "Language",
                                "advanced": false,
                                "dynamic": false,
                                "info": "language code to extract transcript. please check subtitles/cc to know available transcripts.",
                                "type": "str",
                                "list": false
                            },
                            "youtube_url": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "password": false,
                                "name": "youtube_url",
                                "display_name": "Video URL",
                                "advanced": false,
                                "input_types": [
                                    "Input"
                                ],
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Downloads the YouTube transcripts and video information.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "Youtube Loader",
                        "custom_fields": {
                            "language": null,
                            "youtube_url": null
                        },
                        "output_types": [
                            "YoutubeLoader"
                        ],
                        "documentation": "https://python.langchain.com/docs/integrations/providers/youtube",
                        "beta": false,
                        "error": null
                    },
                    "id": "YoutubeLoader-A8cKE"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -344.2232976982365,
                    "y": 509.7090471475826
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 502,
                "id": "RecursiveCharacterTextSplitter-qUXK1",
                "type": "genericNode",
                "position": {
                    "x": 262.162602181627,
                    "y": -376.05275966017325
                },
                "data": {
                    "type": "RecursiveCharacterTextSplitter",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow import CustomComponent\nfrom langchain.schema import Document\nfrom genflow.utils.util import build_loader_repr_from_documents\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        self.repr_value = build_loader_repr_from_documents(docs)\n        return docs\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chunk_overlap": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 200,
                                "password": false,
                                "name": "chunk_overlap",
                                "display_name": "Chunk Overlap",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The amount of overlap between chunks.",
                                "type": "int",
                                "list": false
                            },
                            "chunk_size": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 1000,
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Chunk Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The maximum length of each chunk.",
                                "type": "int",
                                "list": false
                            },
                            "documents": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The documents to split.",
                                "type": "Document",
                                "list": true
                            },
                            "separators": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "separators",
                                "display_name": "Separators",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].",
                                "type": "str",
                                "list": true
                            }
                        },
                        "description": "Split text into chunks of a specified length.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "Recursive Character Text Splitter",
                        "custom_fields": {
                            "chunk_overlap": null,
                            "chunk_size": null,
                            "documents": null,
                            "separators": null
                        },
                        "output_types": [
                            "RecursiveCharacterTextSplitter"
                        ],
                        "documentation": "https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter",
                        "beta": true,
                        "error": null
                    },
                    "id": "RecursiveCharacterTextSplitter-qUXK1"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 262.162602181627,
                    "y": -376.05275966017325
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 291,
                "id": "Chroma-yV84K",
                "type": "genericNode",
                "position": {
                    "x": 1000.9240185916012,
                    "y": 98.96438356833764
                },
                "data": {
                    "type": "Chroma",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional, Union\nfrom genflow import CustomComponent\n\nfrom langchain.vectorstores.chroma import Chroma\nfrom langchain.schema import Document\nfrom langchain.vectorstores.base import VectorStore\nfrom langchain.schema import BaseRetriever\nfrom langchain.embeddings.base import Embeddings\nimport chromadb  # type: ignore\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://docs.aiplanet.com/components/vector-store#chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\n                \"display_name\": \"Collection Name\",\n                \"value\": \"genflow\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"persist\": {\n                \"display_name\": \"Persist\",\n                \"value\": True,\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"persist_directory\": {\n                \"display_name\": \"Persist Directory\",\n                \"value\": \"/mnt/models/chroma\",\n                \"required\": False,\n                \"advanced\": True,\n            },\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        chroma_server_ssl_enabled: bool,\n        collection_name: Optional[str] = \"genflow\",\n        persist: Optional[bool] = True,\n        persist_directory: Optional[str] = \"/mnt/models/chroma\",\n        embedding: Optional[Embeddings] = None,\n        documents: Optional[Document] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins\n                or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        if embedding is not None:\n            return Chroma(\n                persist_directory=persist_directory,\n                client_settings=chroma_settings,\n                embedding_function=embedding,\n                collection_name=collection_name,\n            )\n\n        return Chroma(\n            persist_directory=persist_directory, client_settings=chroma_settings\n        )\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chroma_server_cors_allow_origins": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_cors_allow_origins",
                                "display_name": "Server CORS Allow Origins",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "chroma_server_grpc_port": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_grpc_port",
                                "display_name": "Server gRPC Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "chroma_server_host": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_host",
                                "display_name": "Server Host",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "chroma_server_port": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "chroma_server_port",
                                "display_name": "Server Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "int",
                                "list": false
                            },
                            "chroma_server_ssl_enabled": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "password": false,
                                "name": "chroma_server_ssl_enabled",
                                "display_name": "Server SSL Enabled",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "collection_name": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "genflow",
                                "password": false,
                                "name": "collection_name",
                                "display_name": "Collection Name",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "documents": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Document",
                                "list": true
                            },
                            "embedding": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "embedding",
                                "display_name": "Embedding",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "Embeddings",
                                "list": false
                            },
                            "persist": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "password": false,
                                "name": "persist",
                                "display_name": "Persist",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "bool",
                                "list": false
                            },
                            "persist_directory": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "/mnt/models/chroma",
                                "password": false,
                                "name": "persist_directory",
                                "display_name": "Persist Directory",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            }
                        },
                        "description": "Implementation of Vector Store using Chroma",
                        "base_classes": [
                            "VectorStore",
                            "BaseRetriever"
                        ],
                        "display_name": "Chroma",
                        "custom_fields": {
                            "chroma_server_cors_allow_origins": null,
                            "chroma_server_grpc_port": null,
                            "chroma_server_host": null,
                            "chroma_server_port": null,
                            "chroma_server_ssl_enabled": null,
                            "collection_name": null,
                            "documents": null,
                            "embedding": null,
                            "persist": null,
                            "persist_directory": null
                        },
                        "output_types": [
                            "Chroma"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/vector-store#chroma",
                        "beta": true,
                        "error": null
                    },
                    "id": "Chroma-yV84K"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 1000.9240185916012,
                    "y": 98.96438356833764
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 458,
                "id": "Input-PWQPE",
                "type": "genericNode",
                "position": {
                    "x": -858.911880385648,
                    "y": -463.9980900513115
                },
                "data": {
                    "type": "Input",
                    "node": {
                        "template": {
                            "input_value": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input Value",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "file",
                                "list": false,
                                "file_path": null
                            },
                            "input_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "PDF File",
                                "password": false,
                                "name": "input_key",
                                "display_name": "Input Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "File",
                                "password": false,
                                "options": [
                                    "File",
                                    "Url",
                                    "Text"
                                ],
                                "name": "input_type",
                                "display_name": "Input Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "Input"
                        },
                        "description": "Input is used to specify the type of input.",
                        "base_classes": [
                            "Input"
                        ],
                        "display_name": "Input",
                        "custom_fields": {},
                        "output_types": [
                            "Input"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/inputs",
                        "beta": false,
                        "error": null
                    },
                    "id": "Input-PWQPE"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -858.911880385648,
                    "y": -463.9980900513115
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 458,
                "id": "Input-YGaBp",
                "type": "genericNode",
                "position": {
                    "x": -858.9118803856481,
                    "y": 19.456783074178645
                },
                "data": {
                    "type": "Input",
                    "node": {
                        "template": {
                            "input_value": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input Value",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "file_path": null
                            },
                            "input_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "Website URL",
                                "password": false,
                                "name": "input_key",
                                "display_name": "Input Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "Url",
                                "password": false,
                                "options": [
                                    "File",
                                    "Url",
                                    "Text"
                                ],
                                "name": "input_type",
                                "display_name": "Input Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "Input"
                        },
                        "description": "Input is used to specify the type of input.",
                        "base_classes": [
                            "Input"
                        ],
                        "display_name": "Input",
                        "custom_fields": {},
                        "output_types": [
                            "Input"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/inputs",
                        "beta": false,
                        "error": null
                    },
                    "id": "Input-YGaBp"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": -858.9118803856481,
                    "y": 19.456783074178645
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 458,
                "id": "Input-N8Q0v",
                "type": "genericNode",
                "position": {
                    "x": -847.7429559240031,
                    "y": 549.1829146836267
                },
                "data": {
                    "type": "Input",
                    "node": {
                        "template": {
                            "input_value": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input Value",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false,
                                "file_path": null
                            },
                            "input_key": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "Youtube Video URL",
                                "password": false,
                                "name": "input_key",
                                "display_name": "Input Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "input_type": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": "Url",
                                "password": false,
                                "options": [
                                    "File",
                                    "Url",
                                    "Text"
                                ],
                                "name": "input_type",
                                "display_name": "Input Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "type": "str",
                                "list": false
                            },
                            "_type": "Input"
                        },
                        "description": "Input is used to specify the type of input.",
                        "base_classes": [
                            "Input"
                        ],
                        "display_name": "Input",
                        "custom_fields": {},
                        "output_types": [
                            "Input"
                        ],
                        "documentation": "https://docs.aiplanet.com/components/inputs",
                        "beta": false,
                        "error": null
                    },
                    "id": "Input-N8Q0v"
                },
                "selected": false,
                "dragging": false,
                "positionAbsolute": {
                    "x": -847.7429559240031,
                    "y": 549.1829146836267
                }
            },
            {
                "width": 384,
                "height": 502,
                "id": "RecursiveCharacterTextSplitter-aZ49J",
                "type": "genericNode",
                "position": {
                    "x": 266.0369204795146,
                    "y": 142.9770848381375
                },
                "data": {
                    "type": "RecursiveCharacterTextSplitter",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow import CustomComponent\nfrom langchain.schema import Document\nfrom genflow.utils.util import build_loader_repr_from_documents\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        self.repr_value = build_loader_repr_from_documents(docs)\n        return docs\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chunk_overlap": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 200,
                                "password": false,
                                "name": "chunk_overlap",
                                "display_name": "Chunk Overlap",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The amount of overlap between chunks.",
                                "type": "int",
                                "list": false
                            },
                            "chunk_size": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 1000,
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Chunk Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The maximum length of each chunk.",
                                "type": "int",
                                "list": false
                            },
                            "documents": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The documents to split.",
                                "type": "Document",
                                "list": true
                            },
                            "separators": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "separators",
                                "display_name": "Separators",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].",
                                "type": "str",
                                "list": true
                            }
                        },
                        "description": "Split text into chunks of a specified length.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "Recursive Character Text Splitter",
                        "custom_fields": {
                            "chunk_overlap": null,
                            "chunk_size": null,
                            "documents": null,
                            "separators": null
                        },
                        "output_types": [
                            "RecursiveCharacterTextSplitter"
                        ],
                        "documentation": "https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter",
                        "beta": true,
                        "error": null
                    },
                    "id": "RecursiveCharacterTextSplitter-aZ49J"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 266.0369204795146,
                    "y": 142.9770848381375
                },
                "dragging": false
            },
            {
                "width": 384,
                "height": 502,
                "id": "RecursiveCharacterTextSplitter-lowmy",
                "type": "genericNode",
                "position": {
                    "x": 121.77782789667378,
                    "y": 659.5997651118655
                },
                "data": {
                    "type": "RecursiveCharacterTextSplitter",
                    "node": {
                        "template": {
                            "code": {
                                "dynamic": true,
                                "required": true,
                                "placeholder": "",
                                "show": false,
                                "multiline": true,
                                "value": "from typing import Optional\nfrom genflow import CustomComponent\nfrom langchain.schema import Document\nfrom genflow.utils.util import build_loader_repr_from_documents\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        self.repr_value = build_loader_repr_from_documents(docs)\n        return docs\n",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "type": "code",
                                "list": false
                            },
                            "_type": "CustomComponent",
                            "chunk_overlap": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 200,
                                "password": false,
                                "name": "chunk_overlap",
                                "display_name": "Chunk Overlap",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The amount of overlap between chunks.",
                                "type": "int",
                                "list": false
                            },
                            "chunk_size": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "value": 1000,
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Chunk Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The maximum length of each chunk.",
                                "type": "int",
                                "list": false
                            },
                            "documents": {
                                "required": true,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "documents",
                                "display_name": "Documents",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The documents to split.",
                                "type": "Document",
                                "list": true
                            },
                            "separators": {
                                "required": false,
                                "placeholder": "",
                                "show": true,
                                "multiline": false,
                                "password": false,
                                "name": "separators",
                                "display_name": "Separators",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].",
                                "type": "str",
                                "list": true
                            }
                        },
                        "description": "Split text into chunks of a specified length.",
                        "base_classes": [
                            "Document"
                        ],
                        "display_name": "Recursive Character Text Splitter",
                        "custom_fields": {
                            "chunk_overlap": null,
                            "chunk_size": null,
                            "documents": null,
                            "separators": null
                        },
                        "output_types": [
                            "RecursiveCharacterTextSplitter"
                        ],
                        "documentation": "https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter",
                        "beta": true,
                        "error": null
                    },
                    "id": "RecursiveCharacterTextSplitter-lowmy"
                },
                "selected": false,
                "positionAbsolute": {
                    "x": 121.77782789667378,
                    "y": 659.5997651118655
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "source": "CombineDocsChain-NPOQR",
                "sourceHandle": "{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-NPOQRœ}",
                "target": "RetrievalQA-rq1GF",
                "targetHandle": "{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-rq1GFœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "combine_documents_chain",
                        "id": "RetrievalQA-rq1GF",
                        "inputTypes": null,
                        "type": "BaseCombineDocumentsChain"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "BaseCombineDocumentsChain",
                            "Callable"
                        ],
                        "dataType": "CombineDocsChain",
                        "id": "CombineDocsChain-NPOQR"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-CombineDocsChain-NPOQR{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-NPOQRœ}-RetrievalQA-rq1GF{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-rq1GFœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}"
            },
            {
                "source": "ChatOpenAI-BQzsg",
                "sourceHandle": "{œbaseClassesœ:[œChatOpenAIœ,œBaseLanguageModelœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-BQzsgœ}",
                "target": "CombineDocsChain-NPOQR",
                "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-NPOQRœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "llm",
                        "id": "CombineDocsChain-NPOQR",
                        "inputTypes": null,
                        "type": "BaseLanguageModel"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "ChatOpenAI",
                            "BaseLanguageModel",
                            "BaseChatModel",
                            "BaseLLM"
                        ],
                        "dataType": "ChatOpenAI",
                        "id": "ChatOpenAI-BQzsg"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-ChatOpenAI-BQzsg{œbaseClassesœ:[œChatOpenAIœ,œBaseLanguageModelœ,œBaseChatModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-BQzsgœ}-CombineDocsChain-NPOQR{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-NPOQRœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
            },
            {
                "source": "Chroma-yV84K",
                "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-yV84Kœ}",
                "target": "RetrievalQA-rq1GF",
                "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-rq1GFœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "retriever",
                        "id": "RetrievalQA-rq1GF",
                        "inputTypes": null,
                        "type": "BaseRetriever"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "VectorStore",
                            "BaseRetriever"
                        ],
                        "dataType": "Chroma",
                        "id": "Chroma-yV84K"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-Chroma-yV84K{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-yV84Kœ}-RetrievalQA-rq1GF{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-rq1GFœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}"
            },
            {
                "source": "RecursiveCharacterTextSplitter-qUXK1",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-qUXK1œ}",
                "target": "Chroma-yV84K",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-yV84Kœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "Chroma-yV84K",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "RecursiveCharacterTextSplitter",
                        "id": "RecursiveCharacterTextSplitter-qUXK1"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-RecursiveCharacterTextSplitter-qUXK1{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-qUXK1œ}-Chroma-yV84K{œfieldNameœ:œdocumentsœ,œidœ:œChroma-yV84Kœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "HuggingFaceEmbeddingInferenceAPI-Xb3wk",
                "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-Xb3wkœ}",
                "target": "Chroma-yV84K",
                "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-yV84Kœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "embedding",
                        "id": "Chroma-yV84K",
                        "inputTypes": null,
                        "type": "Embeddings"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Embeddings"
                        ],
                        "dataType": "HuggingFaceEmbeddingInferenceAPI",
                        "id": "HuggingFaceEmbeddingInferenceAPI-Xb3wk"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-HuggingFaceEmbeddingInferenceAPI-Xb3wk{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œHuggingFaceEmbeddingInferenceAPIœ,œidœ:œHuggingFaceEmbeddingInferenceAPI-Xb3wkœ}-Chroma-yV84K{œfieldNameœ:œembeddingœ,œidœ:œChroma-yV84Kœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
            },
            {
                "source": "Input-PWQPE",
                "sourceHandle": "{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-PWQPEœ}",
                "target": "PyPDFLoader-FgNuU",
                "targetHandle": "{œfieldNameœ:œfile_pathœ,œidœ:œPyPDFLoader-FgNuUœ,œinputTypesœ:[œInputœ],œtypeœ:œfileœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "file_path",
                        "id": "PyPDFLoader-FgNuU",
                        "inputTypes": [
                            "Input"
                        ],
                        "type": "file"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Input"
                        ],
                        "dataType": "Input",
                        "id": "Input-PWQPE"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-Input-PWQPE{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-PWQPEœ}-PyPDFLoader-FgNuU{œfieldNameœ:œfile_pathœ,œidœ:œPyPDFLoader-FgNuUœ,œinputTypesœ:[œInputœ],œtypeœ:œfileœ}"
            },
            {
                "source": "Input-YGaBp",
                "sourceHandle": "{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-YGaBpœ}",
                "target": "WebBaseLoader-4Y2XI",
                "targetHandle": "{œfieldNameœ:œweb_pathœ,œidœ:œWebBaseLoader-4Y2XIœ,œinputTypesœ:[œInputœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "web_path",
                        "id": "WebBaseLoader-4Y2XI",
                        "inputTypes": [
                            "Input"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Input"
                        ],
                        "dataType": "Input",
                        "id": "Input-YGaBp"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-Input-YGaBp{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-YGaBpœ}-WebBaseLoader-4Y2XI{œfieldNameœ:œweb_pathœ,œidœ:œWebBaseLoader-4Y2XIœ,œinputTypesœ:[œInputœ],œtypeœ:œstrœ}"
            },
            {
                "source": "Input-N8Q0v",
                "sourceHandle": "{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-N8Q0vœ}",
                "target": "YoutubeLoader-A8cKE",
                "targetHandle": "{œfieldNameœ:œyoutube_urlœ,œidœ:œYoutubeLoader-A8cKEœ,œinputTypesœ:[œInputœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "youtube_url",
                        "id": "YoutubeLoader-A8cKE",
                        "inputTypes": [
                            "Input"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Input"
                        ],
                        "dataType": "Input",
                        "id": "Input-N8Q0v"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-Input-N8Q0v{œbaseClassesœ:[œInputœ],œdataTypeœ:œInputœ,œidœ:œInput-N8Q0vœ}-YoutubeLoader-A8cKE{œfieldNameœ:œyoutube_urlœ,œidœ:œYoutubeLoader-A8cKEœ,œinputTypesœ:[œInputœ],œtypeœ:œstrœ}"
            },
            {
                "source": "RecursiveCharacterTextSplitter-aZ49J",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-aZ49Jœ}",
                "target": "Chroma-yV84K",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-yV84Kœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "Chroma-yV84K",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "RecursiveCharacterTextSplitter",
                        "id": "RecursiveCharacterTextSplitter-aZ49J"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-RecursiveCharacterTextSplitter-aZ49J{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-aZ49Jœ}-Chroma-yV84K{œfieldNameœ:œdocumentsœ,œidœ:œChroma-yV84Kœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "RecursiveCharacterTextSplitter-lowmy",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-lowmyœ}",
                "target": "Chroma-yV84K",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-yV84Kœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "Chroma-yV84K",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "RecursiveCharacterTextSplitter",
                        "id": "RecursiveCharacterTextSplitter-lowmy"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-RecursiveCharacterTextSplitter-lowmy{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-lowmyœ}-Chroma-yV84K{œfieldNameœ:œdocumentsœ,œidœ:œChroma-yV84Kœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "YoutubeLoader-A8cKE",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œYoutubeLoaderœ,œidœ:œYoutubeLoader-A8cKEœ}",
                "target": "RecursiveCharacterTextSplitter-lowmy",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-lowmyœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "RecursiveCharacterTextSplitter-lowmy",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "YoutubeLoader",
                        "id": "YoutubeLoader-A8cKE"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-YoutubeLoader-A8cKE{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œYoutubeLoaderœ,œidœ:œYoutubeLoader-A8cKEœ}-RecursiveCharacterTextSplitter-lowmy{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-lowmyœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "WebBaseLoader-4Y2XI",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œWebBaseLoaderœ,œidœ:œWebBaseLoader-4Y2XIœ}",
                "target": "RecursiveCharacterTextSplitter-aZ49J",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-aZ49Jœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "RecursiveCharacterTextSplitter-aZ49J",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "WebBaseLoader",
                        "id": "WebBaseLoader-4Y2XI"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-WebBaseLoader-4Y2XI{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œWebBaseLoaderœ,œidœ:œWebBaseLoader-4Y2XIœ}-RecursiveCharacterTextSplitter-aZ49J{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-aZ49Jœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            },
            {
                "source": "PyPDFLoader-FgNuU",
                "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-FgNuUœ}",
                "target": "RecursiveCharacterTextSplitter-qUXK1",
                "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-qUXK1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "documents",
                        "id": "RecursiveCharacterTextSplitter-qUXK1",
                        "inputTypes": null,
                        "type": "Document"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Document"
                        ],
                        "dataType": "PyPDFLoader",
                        "id": "PyPDFLoader-FgNuU"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900  stroke-connection",
                "animated": false,
                "id": "reactflow__edge-PyPDFLoader-FgNuU{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-FgNuUœ}-RecursiveCharacterTextSplitter-qUXK1{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-qUXK1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"
            }
        ],
        "viewport": {
            "x": 681.1348028130053,
            "y": 311.2066413138375,
            "zoom": 0.40001619870146776
        }
    },
    "description": "Chat with multiple types of inputs. Youtube, URL, PDF.",
    "name": "Multi Input Chat",
    "flow_type": "chat"
}